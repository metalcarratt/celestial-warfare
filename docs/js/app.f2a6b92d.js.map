{"version":3,"file":"js/app.f2a6b92d.js","mappings":"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","sources":["webpack://celestial-warfare/./src/components/SectionC.vue","webpack://celestial-warfare/./src/components/SectionC.vue?dae1","webpack://celestial-warfare/./src/components/ItemsC.vue","webpack://celestial-warfare/./src/components/ItemsC.vue?1a91","webpack://celestial-warfare/./src/building/location.enum.ts","webpack://celestial-warfare/./src/library/skills.ts","webpack://celestial-warfare/./src/library/books.ts","webpack://celestial-warfare/./src/library/library.ts","webpack://celestial-warfare/./src/residence/buildings/residence.ts","webpack://celestial-warfare/./src/building/buildingsStore.ts","webpack://celestial-warfare/./src/artefacts/craftsmanLevel.ts","webpack://celestial-warfare/./src/person/Craftsman.ts","webpack://celestial-warfare/./src/apothecary/herbs.ts","webpack://celestial-warfare/./src/apothecary/elixers.ts","webpack://celestial-warfare/./src/inventory/items.ts","webpack://celestial-warfare/./src/residence/cultivationLevels.ts","webpack://celestial-warfare/./src/person/Cultivator.ts","webpack://celestial-warfare/./src/person/PersonAction.ts","webpack://celestial-warfare/./src/person/PersonInventory.ts","webpack://celestial-warfare/./src/apothecary/apothecary.ts","webpack://celestial-warfare/./src/outside/outsideActions.ts","webpack://celestial-warfare/./src/outside/outside.ts","webpack://celestial-warfare/./src/residence/buildings/mountain.ts","webpack://celestial-warfare/./src/residence/buildings/seclusionChambers.ts","webpack://celestial-warfare/./src/residence/buildings/trialRealm.ts","webpack://celestial-warfare/./src/apothecary/farmService.ts","webpack://celestial-warfare/./src/apothecary/herbFarm.ts","webpack://celestial-warfare/./src/artefacts/artefacts.ts","webpack://celestial-warfare/./src/artefacts/craftingService.ts","webpack://celestial-warfare/./src/artefacts/furnace.ts","webpack://celestial-warfare/./src/beasts/beastHoldingPen.ts","webpack://celestial-warfare/./src/formation/formationPavilion.ts","webpack://celestial-warfare/./src/combat/arena.ts","webpack://celestial-warfare/./src/building/allBuildings.ts","webpack://celestial-warfare/./src/person/PersonLocation.ts","webpack://celestial-warfare/./src/person/PersonSkills.ts","webpack://celestial-warfare/./src/person/PersonGoal.ts","webpack://celestial-warfare/./src/person/Person.ts","webpack://celestial-warfare/./src/person/data/gender.ts","webpack://celestial-warfare/./src/person/data/faces.ts","webpack://celestial-warfare/./src/person/data/names.ts","webpack://celestial-warfare/./src/person/PersonStoreType.ts","webpack://celestial-warfare/./src/store.ts","webpack://celestial-warfare/./src/inventory/inventory.ts","webpack://celestial-warfare/./src/inventory/InventorySection.vue","webpack://celestial-warfare/./src/inventory/InventorySection.vue?1467","webpack://celestial-warfare/./src/tick/ThickButton.vue","webpack://celestial-warfare/./src/tick/ThickButton.vue?6713","webpack://celestial-warfare/./src/components/SidePanel.vue","webpack://celestial-warfare/./src/components/SidePanel.vue?ea01","webpack://celestial-warfare/./src/components/NextSteps.vue","webpack://celestial-warfare/./src/components/NextSteps.vue?b31c","webpack://celestial-warfare/./src/residence/CultivationDetails.vue","webpack://celestial-warfare/./src/residence/CultivationDetails.vue?40a8","webpack://celestial-warfare/./src/artefacts/CraftsmanDetails.vue","webpack://celestial-warfare/./src/artefacts/CraftsmanDetails.vue?cf69","webpack://celestial-warfare/./src/building/BuildingActions.vue","webpack://celestial-warfare/./src/building/BuildingActions.vue?4c45","webpack://celestial-warfare/./src/person/view/PersonInventory.vue","webpack://celestial-warfare/./src/person/view/PersonBanner.vue","webpack://celestial-warfare/./src/person/view/PersonBanner.vue?6611","webpack://celestial-warfare/./src/person/view/PersonWrapper.vue","webpack://celestial-warfare/./src/person/view/PersonWrapper.vue?978b","webpack://celestial-warfare/./src/person/view/PersonActions.vue","webpack://celestial-warfare/./src/person/view/PersonActions.vue?b231","webpack://celestial-warfare/./src/person/view/PersonSkills.vue","webpack://celestial-warfare/./src/goals/explorationGoals.ts","webpack://celestial-warfare/./src/goals/cultivationGoals.ts","webpack://celestial-warfare/./src/goals/libraryGoals.ts","webpack://celestial-warfare/./src/goals/apothecaryGoals.ts","webpack://celestial-warfare/./src/goals/artefactGoals.ts","webpack://celestial-warfare/./src/goals/beastTamingGoals.ts","webpack://celestial-warfare/./src/goals/combatGoals.ts","webpack://celestial-warfare/./src/goals/formationGoals.ts","webpack://celestial-warfare/./src/goals/herbalismGoals.ts","webpack://celestial-warfare/./src/goals/allGoals.ts","webpack://celestial-warfare/./src/person/view/PersonGoals.vue","webpack://celestial-warfare/./src/person/view/PersonGoals.vue?c424","webpack://celestial-warfare/./src/person/view/PersonDetails.vue","webpack://celestial-warfare/./src/person/view/PersonDetails.vue?1a45","webpack://celestial-warfare/./src/building/BuildingLabel.vue","webpack://celestial-warfare/./src/building/BuildingLabel.vue?06f0","webpack://celestial-warfare/./src/person/view/PersonMeeple.vue","webpack://celestial-warfare/./src/person/view/PersonMeeple.vue?f672","webpack://celestial-warfare/./src/building/buildingService.ts","webpack://celestial-warfare/./src/building/BuildingDiv.vue","webpack://celestial-warfare/./src/building/BuildingDiv.vue?98fd","webpack://celestial-warfare/./src/person/view/PersonGender.vue","webpack://celestial-warfare/./src/person/view/PersonGender.vue?19b9","webpack://celestial-warfare/./src/person/view/PersonSynopsis.vue","webpack://celestial-warfare/./src/person/view/PersonSynopsis.vue?cea9","webpack://celestial-warfare/./src/building/BuildingBar.vue","webpack://celestial-warfare/./src/building/BuildingBar.vue?fb47","webpack://celestial-warfare/./src/building/AllBuildings.vue","webpack://celestial-warfare/./src/tick/Tick.ts","webpack://celestial-warfare/./src/App.vue","webpack://celestial-warfare/./src/App.vue?7ccd","webpack://celestial-warfare/./src/main.ts","webpack://celestial-warfare/webpack/bootstrap","webpack://celestial-warfare/webpack/runtime/chunk loaded","webpack://celestial-warfare/webpack/runtime/compat get default export","webpack://celestial-warfare/webpack/runtime/define property getters","webpack://celestial-warfare/webpack/runtime/global","webpack://celestial-warfare/webpack/runtime/hasOwnProperty shorthand","webpack://celestial-warfare/webpack/runtime/jsonp chunk loading","webpack://celestial-warfare/webpack/startup"],"sourcesContent":["<template>\r\n    <div class=\"section\">\r\n        <slot></slot>       \r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.section {\r\n    border: 1px solid black;\r\n    padding: 5px;\r\n    display: inline-block;\r\n    margin: 5px;\r\n}\r\n</style>","import { render } from \"./SectionC.vue?vue&type=template&id=39941380&scoped=true\"\nconst script = {}\n\nimport \"./SectionC.vue?vue&type=style&index=0&id=39941380&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-39941380\"]])\n\nexport default __exports__","<template>\r\n    <span class=\"items\"><slot></slot></span>\r\n</template>\r\n\r\n<style scoped>\r\n.items {\r\n    display: block;\r\n}\r\n</style>","import { render } from \"./ItemsC.vue?vue&type=template&id=33492c5a&scoped=true\"\nconst script = {}\n\nimport \"./ItemsC.vue?vue&type=style&index=0&id=33492c5a&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-33492c5a\"]])\n\nexport default __exports__","export const LOCATION_RESIDENCE = 'Residence';\r\nexport const LOCATION_MOUNTAIN = 'Mountain';\r\nexport const LOCATION_SECLUSION = 'Seclusion Chambers';\r\n\r\nexport const LOCATION_ARTEFACT_SCHOOL = 'Artefact School';\r\nexport const LOCATION_ARTEFACT_FURNACE = 'Furnace';\r\n\r\nexport const LOCATION_HERB_FARM = 'Herb Farm';\r\nexport const LOCATION_APOTHECARY = 'Apothecary';\r\n\r\nexport const LOCATION_OUTSIDE = 'Outside';\r\n\r\nexport const LOCATION_LIBRARY = 'Library';\r\n\r\nexport const LOCATION_BEAST_HOLDING_PEN = 'Beast Pavilion';\r\n\r\nexport const LOCATION_FOMRATION_PAVILION = 'Formation Pavilion';\r\n\r\nexport const LOCATION_ARENA = 'Combat Arena';","export enum Skill {\r\n    CRAFTING_1 = 'Crafting 1',\r\n    HERBALISM_1 = 'Herbalism 1',\r\n    APOTHECARY_1 = 'Apothecary 1',\r\n    FORMATIONS_1 = 'Formations 1',\r\n    BEAST_TAMING_1 = 'Beast Taming 1',\r\n    VITALITY_PILL = 'Concoct Vitality Pill',\r\n    SHIELD = 'Crafting Shields',\r\n    ELEMENTAL_STONE = 'Crafting elemental stone'\r\n}","import { Skill } from \"./skills\"\r\n\r\nexport enum Book {\r\n    CRAFTING_LEVEL_1 = 'Crafting Level 1',\r\n    HERBALISM_1 = 'Growing Herbs 1',\r\n    APOTHECARY_1 = 'Making potions 1',\r\n    VITALITY_PILL = 'Vitality Pill',\r\n    SHIELD_BOOK = 'Crafting Shields',\r\n    FORMATIONS_1 = 'Formations Level 1',\r\n    BEAST_TAMING_1 = 'Beast Taming 1'\r\n}\r\n\r\nexport interface BookType {\r\n    name: Book,\r\n    prerequisites: Skill[],\r\n    skill: Skill\r\n}\r\n\r\nexport const CraftingLevel1 : BookType = {\r\n    name: Book.CRAFTING_LEVEL_1,\r\n    prerequisites: [],\r\n    skill: Skill.CRAFTING_1\r\n}\r\n\r\nexport const HerbalismLevel1 : BookType = {\r\n    name: Book.HERBALISM_1,\r\n    prerequisites: [],\r\n    skill: Skill.HERBALISM_1\r\n}\r\n\r\nexport const ApothecaryLevel1 : BookType = {\r\n    name: Book.APOTHECARY_1,\r\n    prerequisites: [],\r\n    skill: Skill.APOTHECARY_1\r\n}\r\n\r\nexport const VitalityPillBook : BookType = {\r\n    name: Book.VITALITY_PILL,\r\n    prerequisites: [Skill.APOTHECARY_1],\r\n    skill: Skill.VITALITY_PILL\r\n}\r\n\r\nexport const ShieldBook : BookType = {\r\n    name: Book.SHIELD_BOOK,\r\n    prerequisites: [Skill.CRAFTING_1],\r\n    skill: Skill.SHIELD\r\n}\r\n\r\nexport const FormationsLevel1 : BookType = {\r\n    name: Book.FORMATIONS_1,\r\n    prerequisites: [],\r\n    skill: Skill.FORMATIONS_1\r\n}\r\n\r\nexport const BeastTamingLevel1 : BookType = {\r\n    name: Book.BEAST_TAMING_1,\r\n    prerequisites: [],\r\n    skill: Skill.BEAST_TAMING_1\r\n}\r\n\r\nexport const allBooks = [\r\n    CraftingLevel1,\r\n    HerbalismLevel1,\r\n    ApothecaryLevel1,\r\n    VitalityPillBook,\r\n    ShieldBook,\r\n    FormationsLevel1,\r\n    BeastTamingLevel1\r\n]","import { BuildingType } from \"@/building/building\";\r\nimport { LOCATION_LIBRARY } from \"@/building/location.enum\";\r\nimport { PersonType } from \"@/person/Person\";\r\nimport { ActionType } from '@/building/building';\r\nimport store from \"@/store\";\r\nimport { allBooks, BookType } from \"./books\";\r\n\r\nconst studyBook = (person : PersonType, book : BookType) => {\r\n    console.log(\"Studying \" + book.name);\r\n    person.skills.learnSkill(book.skill);\r\n}\r\n\r\nexport const addReadBookActions = (person : PersonType) => {\r\n    const actions : ActionType[] = [];\r\n    allBooks\r\n        .filter(book => !person.skills.knows(book.skill)\r\n            && book.prerequisites.every(skill => person.skills.knows(skill))\r\n        )\r\n        .forEach(book =>\r\n        actions.push({\r\n            name: `Study ${book.name}`,\r\n            describe: `Studying ${book.name}`,\r\n            action: () => studyBook(person, book)\r\n        })\r\n    );\r\n    return actions;\r\n}\r\n\r\nexport const library : BuildingType = {\r\n    title: 'Library',\r\n    icon: 'library.png',\r\n    built: () => true,\r\n    build: () => {},\r\n    canBuild: () => true,\r\n    occupants: () => store.people().filter(person => person.location.eq(LOCATION_LIBRARY)),\r\n    canGo: () => true,\r\n    actions: addReadBookActions\r\n}","import { ActionType, BuildingType } from \"@/building/building\";\r\nimport { LOCATION_RESIDENCE } from \"@/building/location.enum\";\r\nimport { PersonType } from \"@/person/Person\";\r\nimport store from \"@/store\";\r\n\r\nexport const cultivateAction : ActionType = {\r\n    name: 'Cultivate',\r\n    describe: 'Cultivating',\r\n    action: (person : PersonType) => person.cultivator.cultivate()\r\n}\r\n\r\nexport const residence : BuildingType = {\r\n    title: LOCATION_RESIDENCE,\r\n    icon: 'house.png',\r\n    built: () => true,\r\n    build: () => {},\r\n    canBuild: () => true,\r\n    occupants: () => store.people().filter(person => person.location.eq(LOCATION_RESIDENCE)),\r\n    canGo: () => true,\r\n    defaultAction: cultivateAction\r\n};","import { library } from \"@/library/library\";\r\nimport { residence } from \"@/residence/buildings/residence\";\r\nimport { BuildingType } from \"./building\";\r\n\r\nexport interface BuildingsStore {\r\n    selected: number,\r\n    plots: (BuildingType | null)[]\r\n}\r\n\r\nexport const createBuildingsStore = () : BuildingsStore => {\r\n    return {\r\n        selected: 5,\r\n        plots: [\r\n            null, null, null, null,\r\n            null, residence, null, null,\r\n            null, null, library, null,\r\n            null, null, null, null\r\n        ]\r\n    };\r\n}","export interface CraftsmanLevelType {\r\n    name : string,\r\n    artefactKnowledge: number,\r\n    craftingSkill: number\r\n}\r\n\r\nconst NONE : CraftsmanLevelType = {\r\n    name: 'None',\r\n    artefactKnowledge: 0,\r\n    craftingSkill: 0\r\n}\r\n\r\nconst FOUNDATION : CraftsmanLevelType = {\r\n    name: 'Foundation',\r\n    artefactKnowledge: 5,\r\n    craftingSkill: 0\r\n}\r\n\r\nconst VISION : CraftsmanLevelType = {\r\n    name: 'Vision',\r\n    artefactKnowledge: 15,\r\n    craftingSkill: 3\r\n}\r\n\r\nconst DOMINANCE : CraftsmanLevelType = {\r\n    name: 'Dominance',\r\n    artefactKnowledge: 100,\r\n    craftingSkill: 100\r\n}\r\n\r\nconst TRANSCENDENCE : CraftsmanLevelType = {\r\n    name: 'Transcendence',\r\n    artefactKnowledge: 1000,\r\n    craftingSkill: 1000\r\n}\r\n\r\nexport const levelType = (level : number) : CraftsmanLevelType => {\r\n    switch (level) {\r\n        case 1:\r\n            return FOUNDATION;\r\n        case 2:\r\n            return VISION;\r\n        case 3:\r\n            return DOMINANCE;\r\n        case 4:\r\n            return TRANSCENDENCE;\r\n        default:\r\n            return NONE;\r\n    }\r\n}","\r\nimport { levelType } from \"@/artefacts/craftsmanLevel\";\r\nimport { PersonStoreType } from \"./PersonStoreType\";\r\n\r\nexport class Craftsman {\r\n\r\n    store: PersonStoreType['craftsman'];\r\n    \r\n    constructor(personStore : PersonStoreType) {\r\n        this.store = personStore.craftsman;\r\n    }\r\n\r\n    level() : number {\r\n        return this.store.craftsmanLevel;\r\n    }\r\n\r\n    levelUp() {\r\n        this.store.craftsmanLevel += 1;\r\n    }\r\n\r\n    artefactKnowledge() : number {\r\n        return this.store.artefactKnowledge;\r\n    }\r\n\r\n    increaseArtefactKnowledge(amount : number) {\r\n        const nextLevel = levelType(this.level() + 1);\r\n        if (this.artefactKnowledge() < nextLevel.artefactKnowledge) {\r\n            this.store.artefactKnowledge += amount;\r\n        }\r\n        this.nextCraftsmanLevel();\r\n    }\r\n\r\n    craftingSkill() : number {\r\n        return this.store.craftingSkill;\r\n    }\r\n\r\n    increaseCraftingSkill(amount : number) {\r\n        const nextLevel = levelType(this.level() + 1);\r\n        if (this.craftingSkill() < nextLevel.craftingSkill) {\r\n            this.store.craftingSkill += amount;\r\n        }\r\n        this.nextCraftsmanLevel();\r\n    }\r\n\r\n    nextCraftsmanLevel() {\r\n        const nextLevel = levelType(this.level() + 1);\r\n        if (this.artefactKnowledge() >= nextLevel.artefactKnowledge\r\n            && this.craftingSkill() >= nextLevel.craftingSkill\r\n        ) {\r\n            this.levelUp();\r\n        }\r\n    }    \r\n}","export const GINSENG = 'Ginseng';\r\nexport const FIRE_LILY = 'Fire Lily';\r\n\r\nexport interface Herb {\r\n    name: string,\r\n    gestationPeriod: number,\r\n    yield: number\r\n}\r\n\r\nexport const Ginseng : Herb = {\r\n    name: GINSENG,\r\n    gestationPeriod: 4,\r\n    yield: 4\r\n}\r\n\r\nexport const FireLily : Herb = {\r\n    name: FIRE_LILY,\r\n    gestationPeriod: 2,\r\n    yield: 8\r\n}\r\n\r\nexport const allHerbNames = [\r\n    GINSENG, FIRE_LILY\r\n];\r\n\r\nexport const allHerbs = [\r\n    Ginseng, FireLily\r\n]\r\n\r\nexport const getHerbForName = (name : string) : Herb | undefined => allHerbs.find(herb => herb.name === name);","import { Skill } from \"@/library/skills\"\r\nimport { GINSENG } from \"./herbs\"\r\n\r\nexport const enum Elixer {\r\n    VITALITY_PILL = \"Vitality Pill\"\r\n}\r\n\r\nexport interface ElixerType {\r\n    name: Elixer,\r\n    ingredients: {\r\n        [detail:string]: number\r\n    },\r\n    skill?: Skill,\r\n    yield: number\r\n}\r\n\r\nexport const VitalityPill : ElixerType = {\r\n    name: Elixer.VITALITY_PILL,\r\n    ingredients: {\r\n        [GINSENG]: 1\r\n    },\r\n    skill: Skill.VITALITY_PILL,\r\n    yield: 2\r\n}\r\n\r\nexport const allElixers = [\r\n    VitalityPill\r\n]\r\n\r\nexport const getElixerForName = (name : string) : ElixerType => {\r\n    const elixer = allElixers.find(elixer => elixer.name === name);\r\n    if (!elixer) throw `No elixer for name ${name}`;\r\n    return elixer;\r\n}","export const SPIRIT_STONE = 'Spirit Stone';\r\nexport const MED_SPIRIT_STONE = 'Mid-grade Spirit Stone';\r\nexport const HIGH_SPIRIT_STONE = 'High-grade Spirit Stone';\r\nexport const MINERALS = 'Minerals';","export interface CultivationLevelType {\r\n    name: string,\r\n    spiritEnergy: number,\r\n    enlightenment: number,\r\n    sense: number\r\n}\r\n\r\nexport const NONE : CultivationLevelType = {\r\n    name: 'Mortal',\r\n    spiritEnergy: 0,\r\n    enlightenment: 0,\r\n    sense: 0\r\n}\r\n\r\nexport const FOUNDATION : CultivationLevelType = {\r\n    name: 'Foundation',\r\n    spiritEnergy: 10,\r\n    enlightenment: 0,\r\n    sense: 0\r\n}\r\n\r\nexport const VISION : CultivationLevelType = {\r\n    name: 'Vision',\r\n    spiritEnergy: 100,\r\n    enlightenment: 10,\r\n    sense: 0\r\n}\r\n\r\nexport const DOMINANCE : CultivationLevelType = {\r\n    name: 'Dominance',\r\n    spiritEnergy: 1000,\r\n    enlightenment: 100,\r\n    sense: 10\r\n}\r\n\r\nexport const TRANSCENDENCE : CultivationLevelType = {\r\n    name: 'Transcendence',\r\n    spiritEnergy: 10000,\r\n    enlightenment: 1000,\r\n    sense: 100\r\n}\r\n\r\nexport const levelType = (level : number) : CultivationLevelType => {\r\n    switch (level) {\r\n        case 1:\r\n            return FOUNDATION;\r\n        case 2:\r\n            return VISION;\r\n        case 3:\r\n            return DOMINANCE;\r\n        case 4:\r\n            return TRANSCENDENCE;\r\n        default:\r\n            return NONE;\r\n    }\r\n}","import { Elixer } from \"@/apothecary/elixers\";\r\nimport { MED_SPIRIT_STONE, SPIRIT_STONE } from \"@/inventory/items\";\r\nimport { CultivationLevelType, levelType } from \"@/residence/cultivationLevels\";\r\nimport { PersonType } from \"./Person\";\r\nimport { PersonStoreType } from \"./PersonStoreType\";\r\n\r\nexport class Cultivator {\r\n    person : PersonType;\r\n    store: PersonStoreType['cultivation'];\r\n    \r\n    constructor(personStore : PersonStoreType, person : PersonType) {\r\n        this.person = person;\r\n        this.store = personStore.cultivation;\r\n    }\r\n\r\n    qi() {\r\n        return this.store.spiritEnergy;\r\n    }\r\n\r\n    increaseQi(amount : number) {\r\n        this.store.spiritEnergy += amount;\r\n    }\r\n\r\n    level() {\r\n        return this.store.level;\r\n    }\r\n\r\n    levelUp() {\r\n        this.store.level += 1;\r\n    }\r\n\r\n    minLevel(level : number) : boolean {\r\n        return this.store.level >= level;\r\n    }\r\n\r\n    enlightenment() {\r\n        return this.store.enlightenment;\r\n    }\r\n\r\n    sense() {\r\n        return this.store.sense;\r\n    }\r\n\r\n    nextLevelType() : CultivationLevelType {\r\n        return levelType(this.level() + 1);\r\n    }\r\n\r\n    cultivate() {\r\n        // console.log(\"cultivate\");\r\n        if (this.qi() < this.nextLevelType().spiritEnergy) {\r\n            \r\n            if (this.person.inventory.has(MED_SPIRIT_STONE) > 0) {\r\n                this.person.inventory.take(MED_SPIRIT_STONE, 1);\r\n                this.increaseQi(15);\r\n            } else if (this.person.inventory.has(SPIRIT_STONE) > 0) {\r\n                this.person.inventory.take(SPIRIT_STONE, 1);\r\n                this.increaseQi(5);\r\n            } else if (this.person.inventory.has(Elixer.VITALITY_PILL)) {\r\n                this.person.inventory.take(Elixer.VITALITY_PILL, 1);\r\n                this.increaseQi(2);\r\n            } else {\r\n                this.increaseQi(1);\r\n            }\r\n\r\n            this.nextLevel();\r\n        }\r\n    }\r\n\r\n    gainEnlightenment() {\r\n        if (this.enlightenment() < this.nextLevelType().enlightenment) {\r\n            this.store.enlightenment += 1;\r\n            this.nextLevel();\r\n        }\r\n    }\r\n\r\n    senseElements() {\r\n        if (this.sense() < this.nextLevelType().sense) {\r\n            this.store.sense += 1;\r\n            this.nextLevel();\r\n        }\r\n    }\r\n\r\n    nextLevel() {\r\n        const nextLevel = this.nextLevelType();\r\n        // console.log(nextLevel);\r\n    \r\n        if (\r\n            this.qi() >= nextLevel.spiritEnergy\r\n            && this.enlightenment() >= nextLevel.enlightenment\r\n            && this.sense() >= nextLevel.sense\r\n        ) {\r\n            // console.log(\"qualifications met\");\r\n            this.levelUp();\r\n        }\r\n    }\r\n}","import { ActionType } from \"@/building/building\";\r\nimport { PersonType } from \"./Person\";\r\nimport { PersonStoreType } from \"./PersonStoreType\";\r\n\r\nexport class PersonAction {\r\n\r\n    store: PersonStoreType;\r\n    person: PersonType;\r\n    \r\n    constructor(personStore : PersonStoreType, person : PersonType) {\r\n        this.store = personStore;\r\n        this.person = person;\r\n    }\r\n\r\n    set(action : ActionType, target : string) {\r\n        this.store.action = {\r\n            action,\r\n            target\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.store.action = undefined;\r\n    }\r\n\r\n    perform() {\r\n        if (this.store.action) this.store.action.action.action(this.person);\r\n    }\r\n\r\n    getTarget() : string {\r\n        return this.store.action ? this.store.action.target : '';\r\n    }\r\n\r\n    hasAction() : boolean {\r\n        return this.store.action !== undefined;\r\n    }\r\n\r\n    getAction() : ActionType | null {\r\n        return this.store.action ? this.store.action.action : null;\r\n    }\r\n\r\n    doing() : string {\r\n        let describe;\r\n        if (this.store.action) {\r\n            describe = this.store.action.action.describe;\r\n        } else {\r\n            const location = this.person.location.is();\r\n            describe = location?.defaultAction?.describe;\r\n        }\r\n\r\n        if (typeof describe === 'string') {\r\n            return describe;\r\n        } else if (typeof describe === 'function') {\r\n            return describe(this.person);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}","import { PersonStoreType } from \"./PersonStoreType\";\r\n\r\nexport class PersonInventory {\r\n\r\n    store: PersonStoreType['inventory'];\r\n    \r\n    constructor(personStore : PersonStoreType) {\r\n        this.store = personStore.inventory;\r\n    }\r\n\r\n    add(item : string, amount : number) {\r\n        if (this.store[item]) {\r\n            this.store[item] += amount;\r\n        } else {\r\n            this.store[item] = amount;\r\n        }\r\n    }\r\n\r\n    has(item : string) : number {\r\n        return this.store[item] ? this.store[item] : 0;\r\n    }\r\n\r\n    take(item : string, amount : number) {\r\n        if (this.store[item]) {\r\n            this.store[item] -= amount;\r\n        } else {\r\n            this.store[item] = 0;\r\n        }\r\n    }\r\n\r\n    items() : string[] {\r\n        return Object.keys(this.store);\r\n    }\r\n}","import { BuildingType } from '../building/building';\r\nimport store from '@/store';\r\nimport { LOCATION_APOTHECARY } from '@/building/location.enum';\r\nimport { allElixers, ElixerType } from './elixers';\r\nimport { PersonType } from '@/person/Person';\r\nimport { Skill } from '@/library/skills';\r\n\r\nconst concoct = (person : PersonType, elixer : ElixerType) => {\r\n    Object.keys(elixer.ingredients)\r\n        .forEach(ingredient =>\r\n            person.inventory.take(ingredient, elixer.ingredients[ingredient])\r\n        );\r\n    person.inventory.add(elixer.name, elixer.yield);\r\n}\r\n\r\nexport const addConcoctActions = (person : PersonType) => {\r\n    const actions = [];\r\n    for (const elixer of allElixers) {\r\n\r\n        const hasRequiredSkill = !elixer.skill || person.skills.knows(elixer.skill);\r\n\r\n        const hasAllIngredients = Object.keys(elixer.ingredients)\r\n            .every(ingredient => \r\n                person.inventory.has(ingredient) >= elixer.ingredients[ingredient])\r\n\r\n        if (hasRequiredSkill && hasAllIngredients) {\r\n            actions.push({\r\n                name: `Concoct ${elixer.name}`,\r\n                describe: `Concocting ${elixer.name}`,\r\n                action: () => concoct(person, elixer)\r\n            });\r\n        }\r\n    }\r\n    return actions;\r\n}\r\n\r\nexport const apothecary : BuildingType = {\r\n    title: LOCATION_APOTHECARY,\r\n    icon: 'apothecary.png',\r\n    built: () => store.store.state.apothecary.apothecary,\r\n    build: () => store.store.state.apothecary.apothecary = true,\r\n    canBuild: () => true,\r\n    occupants: () => store.people().filter(person => person.location.eq(LOCATION_APOTHECARY)),\r\n    canGo: (person) => person.skills.knows(Skill.APOTHECARY_1) && person.cultivator.level() >= 1,\r\n    actions: addConcoctActions\r\n}","import { ActionType } from \"@/building/building\";\r\nimport { FIRE_LILY, GINSENG } from \"@/apothecary/herbs\";\r\nimport { MED_SPIRIT_STONE, MINERALS, SPIRIT_STONE } from \"@/inventory/items\";\r\n\r\nconst randomAmount = (from : number, to : number) : number => {\r\n    const diff = to - from + 1;\r\n    return Math.floor(Math.random() * diff) + from;\r\n}\r\n\r\nexport const exploreForSpiritStones : ActionType = {\r\n    name: 'Explore for Spirit Stones',\r\n    describe: 'Exploring for Spirit Stones',\r\n    action: (person) => {\r\n        person.inventory.add(SPIRIT_STONE, randomAmount(3, 5));\r\n        person.inventory.add(MED_SPIRIT_STONE, randomAmount(1, 2));\r\n    }\r\n}\r\n\r\nexport const exploreForMinerals : ActionType = {\r\n    name: 'Explore for Minerals',\r\n    describe: 'Exploring for Minerals',\r\n    action: (person) => {\r\n        person.inventory.add(MINERALS, randomAmount(3, 5));\r\n    }\r\n}\r\n\r\nexport const exploreForHerbs : ActionType = {\r\n    name: 'Explore for Herbs',\r\n    describe: 'Exploring for Herbs',\r\n    action: (person) => {\r\n        const r = randomAmount(0, 1);\r\n        if (r === 0) {\r\n            person.inventory.add(GINSENG, randomAmount(1, 2));\r\n        } else if (r === 1) {\r\n            person.inventory.add(FIRE_LILY, randomAmount(1, 2));\r\n        }\r\n    }\r\n}","import { BuildingType } from \"@/building/building\";\r\nimport { LOCATION_OUTSIDE } from \"@/building/location.enum\";\r\nimport store from \"@/store\";\r\nimport { exploreForHerbs, exploreForMinerals, exploreForSpiritStones } from \"./outsideActions\";\r\n\r\nexport const outside : BuildingType = {\r\n    title: LOCATION_OUTSIDE,\r\n    icon: 'map.png',\r\n    built: () => true,\r\n    build: () => {},\r\n    canBuild: () => true,\r\n\r\n    occupants: () => store.people().filter(person => person.location.eq(LOCATION_OUTSIDE)),\r\n\r\n    canGo : () => true,\r\n\r\n    actions: () => [\r\n        exploreForSpiritStones,\r\n        exploreForMinerals,\r\n        exploreForHerbs\r\n    ]\r\n};","import { ActionType, BuildingType } from \"@/building/building\";\r\nimport { LOCATION_MOUNTAIN } from \"@/building/location.enum\";\r\nimport { PersonType } from \"@/person/Person\";\r\nimport store from \"@/store\";\r\n\r\nexport const gainEnlightenmentAction : ActionType = {\r\n    name: 'Gain Enlightenment',\r\n    describe: 'Gaining Enlightenment',\r\n    action: (person : PersonType) => person.cultivator.gainEnlightenment()\r\n}\r\n\r\nexport const mountain : BuildingType = {\r\n    title: LOCATION_MOUNTAIN,\r\n    icon: 'mountain.png',\r\n    built: () => store.store.state.residence.mountain,\r\n    build: () => store.store.state.residence.mountain = true,\r\n    canBuild: () => true,\r\n    occupants: () => store.people().filter(person => person.location.eq(LOCATION_MOUNTAIN)),\r\n    canGo: (person) => person.cultivator.minLevel(1),\r\n    defaultAction: gainEnlightenmentAction\r\n};","import { ActionType, BuildingType } from \"@/building/building\";\r\nimport { LOCATION_SECLUSION } from \"@/building/location.enum\";\r\nimport { PersonType } from \"@/person/Person\";\r\nimport store from \"@/store\";\r\nimport { mountain } from \"./mountain\";\r\n\r\nexport const senseElementsAction : ActionType = {\r\n    name: 'Sense Elements',\r\n    describe: 'Sensing Elements',\r\n    action: (person : PersonType) => person.cultivator.senseElements()\r\n}\r\n\r\nexport const seclusionChambers : BuildingType = {\r\n    title: LOCATION_SECLUSION,\r\n    icon: 'cave.png',\r\n    built: () => store.store.state.residence.seclusion,\r\n    build: () => store.store.state.residence.seclusion = true,\r\n    canBuild: () => mountain.built(),\r\n    occupants: () => store.people().filter(person => person.location.eq(LOCATION_SECLUSION)),\r\n    canGo: (person) => person.cultivator.minLevel(2),\r\n    defaultAction: senseElementsAction\r\n};","import { BuildingType } from \"@/building/building\";\r\nimport store from \"@/store\";\r\nimport { seclusionChambers } from \"./seclusionChambers\";\r\n\r\nexport const trialRealm : BuildingType = {\r\n    title: 'Trial Realm',\r\n    icon: 'trial.png',\r\n    built: () => store.store.state.residence.trialRealm,\r\n    build: () => store.store.state.residence.trialRealm = true,\r\n    canBuild: () => seclusionChambers.built(),\r\n    occupants: () => [],\r\n    canGo: () => false\r\n};","import { BuildingDetails } from \"@/building/building\";\r\nimport { getHerbForName } from \"@/apothecary/herbs\";\r\nimport { PersonType } from \"@/person/Person\";\r\nimport store from \"@/store\";\r\n\r\nexport interface FarmedHerbType {\r\n    herb: string,\r\n    gestation: number,\r\n    person: PersonType\r\n}\r\n\r\nexport default {\r\n    plant(herb : string, person : PersonType) {\r\n        console.log(\"Planting \" + herb);\r\n        store.store.state.apothecary.farm.push({\r\n            herb,\r\n            gestation: 0,\r\n            person\r\n        });\r\n    },\r\n\r\n    grow() {\r\n        const plants = store.store.state.apothecary.farm;\r\n        for (const plant of plants) {\r\n            plant.gestation += 1;\r\n            const herb = getHerbForName(plant.herb);\r\n            if (herb && plant.gestation >= herb.gestationPeriod) {\r\n                // ripen\r\n                plant.person.inventory.add(plant.herb, herb.yield);\r\n\r\n                const index = store.store.state.apothecary.farm.indexOf(plant);\r\n                store.store.state.apothecary.farm.splice(index, 1);\r\n            }\r\n        }\r\n    },\r\n\r\n    getDetails() {\r\n        const details : BuildingDetails[] = [];\r\n        for (const plant of store.store.state.apothecary.farm) {\r\n            const herb = getHerbForName(plant.herb);\r\n            details.push({\r\n                item: plant.herb,\r\n                detail: `Gestation ${plant.gestation}/${herb?.gestationPeriod} for person ${plant.person.id()}`\r\n            });\r\n        }\r\n        return details;\r\n    }\r\n}","import { ActionType, BuildingType } from \"@/building/building\";\r\nimport { LOCATION_HERB_FARM } from \"@/building/location.enum\";\r\nimport { Skill } from \"@/library/skills\";\r\nimport { PersonType } from \"@/person/Person\";\r\nimport store from \"@/store\";\r\nimport farmService from \"./farmService\";\r\nimport { allHerbNames } from \"./herbs\";\r\n\r\nexport const addPlantHerbActions = (person : PersonType) => {\r\n    const actions : ActionType[] = [];\r\n    allHerbNames\r\n        .filter(herb => person.inventory.has(herb))\r\n        .forEach(herb =>\r\n        actions.push({\r\n            name: `Plant ${herb}`,\r\n            describe: `Planting ${herb}`,\r\n            action: () => farmService.plant(herb, person)\r\n        })\r\n    );\r\n    return actions;\r\n}\r\n\r\nexport const herbFarm : BuildingType = {\r\n    title: 'Herb Farm',\r\n    icon: 'herb-farm.png',\r\n    details() {\r\n        return farmService.getDetails();\r\n    },\r\n    built: () => store.store.state.apothecary.herbFarm,\r\n    build: () => store.store.state.apothecary.herbFarm = true,\r\n    canBuild: () => true,\r\n    occupants: () => store.people().filter(person => person.location.eq(LOCATION_HERB_FARM)),\r\n    canGo: (person) => person.skills.knows(Skill.HERBALISM_1) && person.cultivator.level() >= 1,\r\n    actions: addPlantHerbActions\r\n};","import { MINERALS, SPIRIT_STONE } from \"@/inventory/items\"\r\nimport { Skill } from \"@/library/skills\"\r\n\r\n\r\nexport interface ArtefactBuildType {\r\n    name: string,\r\n    craftsmanLevel: number,\r\n    materials: {\r\n        [detail:string]: number,\r\n    },\r\n    skill: Skill,\r\n    createNew: Function\r\n}\r\n\r\nexport const SHIELD : ArtefactBuildType = {\r\n    name: 'Shield',\r\n    craftsmanLevel: 1,\r\n    materials: {\r\n        [SPIRIT_STONE]: 1,\r\n        [MINERALS]: 1\r\n    },\r\n    skill: Skill.SHIELD,\r\n    createNew: () => {\r\n        return {\r\n            type: 'Shield'\r\n        }\r\n    }\r\n}\r\n\r\nexport const ELEMENTAL_STONE : ArtefactBuildType = {\r\n    name: 'Elemental Stone',\r\n    craftsmanLevel: 2,\r\n    materials: {\r\n        [SPIRIT_STONE]: 2,\r\n        [MINERALS]: 1\r\n    },\r\n    skill: Skill.ELEMENTAL_STONE,\r\n    createNew: () => {\r\n        return {\r\n            type: 'Elemental Stone'\r\n        }\r\n    }\r\n}\r\n\r\nexport const artefactTypes : ArtefactBuildType[] = [\r\n    SHIELD,\r\n    ELEMENTAL_STONE\r\n];\r\n\r\nexport const getArtefactForName = (name : string) => artefactTypes.find(artefactType => artefactType.name === name);","import inventory from '@/inventory/inventory';\r\nimport { MINERALS, SPIRIT_STONE } from '@/inventory/items';\r\nimport { PersonType } from \"@/person/Person\";\r\nimport { ar } from 'vitest/dist/global-e98f203b';\r\nimport { ArtefactBuildType } from \"./artefacts\";\r\n\r\n\r\nexport const craftingService = { \r\n\r\n    craft(artefactType : ArtefactBuildType | undefined, person : PersonType) {\r\n        console.log(\"crafting\");\r\n        if (artefactType) {\r\n            console.log(artefactType);\r\n            for (const material of Object.keys(artefactType.materials)) {\r\n                const quantity = artefactType.materials[material];\r\n                person.inventory.take(material, quantity);\r\n            }\r\n            \r\n            person.craftsman.increaseCraftingSkill(1);\r\n            person.inventory.add(artefactType.name, 1);\r\n        }\r\n    }\r\n}","import { ActionType, BuildingType } from \"@/building/building\";\r\nimport { LOCATION_ARTEFACT_FURNACE } from \"@/building/location.enum\";\r\nimport { Skill } from \"@/library/skills\";\r\nimport { PersonType } from \"@/person/Person\";\r\nimport store from \"@/store\";\r\nimport { ArtefactBuildType, artefactTypes } from \"./artefacts\";\r\nimport { craftingService } from \"./craftingService\";\r\n\r\nconst canCraftArtefact = (person : PersonType, artefact : ArtefactBuildType) => {\r\n    const hasMaterials = Object.keys(artefact.materials)\r\n        .every(materialName => \r\n            person.inventory.has(materialName) >= artefact.materials[materialName]);\r\n    const hasSkill = person.skills.knows(artefact.skill);\r\n\r\n    return hasSkill && hasMaterials;\r\n}\r\n\r\nexport const furnaceActions = (person : PersonType) => {\r\n    const actions : ActionType[] = [];\r\n    artefactTypes\r\n        .filter(artefact => canCraftArtefact(person, artefact))\r\n        .forEach(artefact => {\r\n            actions.push({\r\n                name: `Craft ${artefact.name}`,\r\n                describe: () => `Crafting ${artefact.name}`,\r\n                action: () => craftingService.craft(artefact, person)\r\n            });\r\n        });\r\n    return actions;\r\n}\r\n\r\nexport const furnace : BuildingType = {\r\n    title: LOCATION_ARTEFACT_FURNACE,\r\n    icon: 'furnace.png',\r\n    built: () => store.furnace(),\r\n    build: () => store.buildFurnace(),\r\n    canBuild: () => true,\r\n    occupants: () => store.people().filter(person => person.location.eq(LOCATION_ARTEFACT_FURNACE)),\r\n    canGo: (person) => person.skills.knows(Skill.CRAFTING_1),\r\n    actions: furnaceActions\r\n}\r\n\r\n","import { BuildingType } from \"@/building/building\";\r\nimport { LOCATION_BEAST_HOLDING_PEN } from \"@/building/location.enum\";\r\nimport { Skill } from \"@/library/skills\";\r\nimport store from \"@/store\";\r\n\r\nexport const beastHoldingPen : BuildingType = {\r\n    title: LOCATION_BEAST_HOLDING_PEN,\r\n    icon: 'beast.png',\r\n    built: () => store.store.state.beastPen.built,\r\n    build: () => store.store.state.beastPen.built = true,\r\n    canBuild: () => true,\r\n    occupants: () => store.people().filter(person => person.location.eq(LOCATION_BEAST_HOLDING_PEN)),\r\n    canGo: (person) => person.cultivator.level() >= 1 && person.skills.knows(Skill.BEAST_TAMING_1),\r\n    actions: () => []\r\n}","import { BuildingType } from \"@/building/building\";\r\nimport { LOCATION_FOMRATION_PAVILION } from \"@/building/location.enum\";\r\nimport { Skill } from \"@/library/skills\";\r\nimport store from \"@/store\";\r\n\r\nexport const formationPavilion : BuildingType = {\r\n    title: LOCATION_FOMRATION_PAVILION,\r\n    icon: 'rune.jpg',\r\n    built: () => store.store.state.formationPavilion.built,\r\n    build: () => store.store.state.formationPavilion.built = true,\r\n    canBuild: () => true,\r\n    occupants: () => store.people().filter(person => person.location.eq(LOCATION_FOMRATION_PAVILION)),\r\n    canGo: (person) => person.cultivator.level() >= 1 && person.skills.knows(Skill.FORMATIONS_1),\r\n    actions: () => []\r\n}","import { BuildingType } from \"@/building/building\";\r\nimport { LOCATION_ARENA, LOCATION_FOMRATION_PAVILION } from \"@/building/location.enum\";\r\nimport store from \"@/store\";\r\n\r\nexport const arena : BuildingType = {\r\n    title: LOCATION_ARENA,\r\n    icon: 'arena.png',\r\n    built: () => store.store.state.arena.built,\r\n    build: () => store.store.state.arena.built = true,\r\n    canBuild: () => true,\r\n    occupants: () => store.people().filter(person => person.location.eq(LOCATION_ARENA)),\r\n    canGo: () => true,\r\n    actions: () => []\r\n}","import { apothecary } from \"@/apothecary/apothecary\";\r\n// import { school } from \"@/artefacts/artefactBuildings\";\r\nimport { outside } from \"@/outside/outside\";\r\nimport { BuildingType } from './building';\r\nimport { library } from \"@/library/library\";\r\nimport { residence } from \"@/residence/buildings/residence\";\r\nimport { mountain } from \"@/residence/buildings/mountain\";\r\nimport { seclusionChambers } from \"@/residence/buildings/seclusionChambers\";\r\nimport { trialRealm } from \"@/residence/buildings/trialRealm\";\r\nimport { herbFarm } from \"@/apothecary/herbFarm\";\r\nimport { furnace } from \"@/artefacts/furnace\";\r\nimport { beastHoldingPen } from \"@/beasts/beastHoldingPen\";\r\nimport { formationPavilion } from \"@/formation/formationPavilion\";\r\nimport { arena } from \"@/combat/arena\";\r\n\r\nexport const allBuildings : BuildingType[] = [\r\n    outside,\r\n    residence,\r\n    mountain,\r\n    seclusionChambers,\r\n    trialRealm,\r\n    herbFarm,\r\n    apothecary,\r\n    furnace,\r\n    library,\r\n    formationPavilion,\r\n    arena,\r\n    beastHoldingPen\r\n];\r\n\r\nexport const getBuildingAt = (buildingName : string) : BuildingType => {\r\n    const found = allBuildings.find(building => building.title === buildingName);\r\n    if (!found) throw 'Error finding building for name ' + buildingName;\r\n    return found;\r\n}\r\n","import { getBuildingAt } from \"@/building/allBuildings\";\r\nimport { PersonStoreType } from \"./PersonStoreType\";\r\n\r\nexport class PersonLocation {\r\n\r\n    store: PersonStoreType;\r\n    \r\n    constructor(personStore : PersonStoreType) {\r\n        this.store = personStore;\r\n    }\r\n\r\n    eq(location : string) {\r\n        return this.store.location === location;\r\n    }\r\n\r\n    goTo(location : string) {\r\n        this.store.location = location;\r\n    }\r\n\r\n    is() {\r\n        return getBuildingAt(this.store.location);\r\n    }\r\n}","import { Skill } from \"@/library/skills\";\r\nimport { PersonStoreType } from \"./PersonStoreType\";\r\n\r\nexport class PersonSkills {\r\n\r\n    store: PersonStoreType;\r\n    \r\n    constructor(personStore : PersonStoreType) {\r\n        this.store = personStore;\r\n    }\r\n\r\n    learnSkill(skill : Skill) {\r\n        this.store.skills.push(skill);\r\n    }\r\n\r\n    listAll() {\r\n        return this.store.skills;\r\n    }\r\n\r\n    knows(skill : Skill) : boolean {\r\n        return this.store.skills.includes(skill);\r\n    }\r\n}","import { GoalType } from \"@/goals/goals\";\r\nimport { PersonType } from \"./Person\";\r\nimport { PersonStoreType } from \"./PersonStoreType\";\r\n\r\nconst doAction = (goal : GoalType, person : PersonType) => {\r\n    if (goal.pre) {\r\n        for (const pre of goal.pre(person)) {\r\n            if (!pre.g.complete(person, pre.q)) {\r\n                doAction(pre.g, person);\r\n                if (person.action.hasAction()) {\r\n                    return;\r\n                }\r\n            } else {\r\n                console.log(\"Complete goal action: \" + pre.g.name);\r\n            }\r\n        }\r\n    }\r\n    console.log(\"Start goal action: \" + goal.name);\r\n    goal.action(person);\r\n    \r\n}\r\n\r\nexport class PersonGoal {\r\n\r\n    store: PersonStoreType['goal'];\r\n    person: PersonType;\r\n    \r\n    constructor(personStore : PersonStoreType, person : PersonType) {\r\n        this.store = personStore.goal;\r\n        this.person = person;\r\n    }\r\n\r\n    assignGoal(goal : GoalType) {\r\n        console.log(\"Assign goal \" + goal.name);\r\n        this.store.type = goal;\r\n        this.processGoal();\r\n    }\r\n\r\n    hasGoal() : boolean {\r\n        return this.store.type !== undefined;\r\n    }\r\n\r\n    goalName() {\r\n        return this.store.type?.name;\r\n    }\r\n\r\n    processGoal() {\r\n        if (this.store.type) {\r\n            if (this.store.type.complete(this.person)) {\r\n                console.log(\"Complete goal action: \" + this.store.type.name);\r\n                this.store.type = undefined;\r\n\r\n            } else {\r\n                doAction(this.store.type, this.person);\r\n                if (this.store.type.complete(this.person)) {\r\n                    console.log(\"Complete goal action: \" + this.store.type.name);\r\n                    this.store.type = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { getBuildingAt } from \"@/building/allBuildings\";\r\nimport { ActionType } from \"@/building/building\";\r\nimport store from \"@/store\";\r\nimport { Craftsman } from \"./Craftsman\";\r\nimport { Cultivator } from \"./Cultivator\";\r\nimport { PersonAction } from \"./PersonAction\";\r\nimport { PersonInventory } from \"./PersonInventory\";\r\nimport { PersonLocation } from \"./PersonLocation\";\r\nimport { PersonStoreType } from \"./PersonStoreType\";\r\nimport { PersonSkills } from './PersonSkills';\r\nimport { PersonGoal } from \"./PersonGoal\";\r\n\r\nexport class PersonType {\r\n    \r\n    ps : PersonStoreType;\r\n    cultivator : Cultivator;\r\n    inventory: PersonInventory;\r\n    location: PersonLocation;\r\n    craftsman: Craftsman;\r\n    action: PersonAction;\r\n    skills: PersonSkills;\r\n    goals: PersonGoal;\r\n    \r\n    constructor(personStore : PersonStoreType) {\r\n        this.ps = personStore;\r\n        this.cultivator = new Cultivator(this.ps, this);\r\n        this.inventory = new PersonInventory(this.ps);\r\n        this.location = new PersonLocation(this.ps);\r\n        this.craftsman = new Craftsman(this.ps);\r\n        this.action = new PersonAction(this.ps, this);\r\n        this.skills = new PersonSkills(this.ps);\r\n        this.goals = new PersonGoal(this.ps, this);\r\n    }\r\n\r\n    id() {\r\n        return this.ps.id;\r\n    }\r\n\r\n    name() {\r\n        return this.ps.name\r\n    }\r\n\r\n    face() {\r\n        return `assets/img/faces/${this.ps.face}.png`;\r\n    }\r\n\r\n    gender() {\r\n        return this.ps.gender;\r\n    }\r\n\r\n    isSelected() : boolean {\r\n        return this.ps.id === store.getSelectedPersonId();\r\n    }\r\n} ","export enum Gender {\r\n    Male = 'Male',\r\n    Female = 'Female'\r\n}\r\n\r\nexport const generateGender = () => {\r\n    const g = Math.floor(Math.random() * 2);\r\n    if (g === 1) {\r\n        return Gender.Male;\r\n    } else {\r\n        return Gender.Female;\r\n    }\r\n}","import { Gender } from \"./gender\";\r\n\r\nexport const generateFace = (gender : Gender) => {\r\n    if (gender === Gender.Male) {\r\n        const f = Math.floor(Math.random() * 20) + 1;\r\n        return `male${f < 10 ? '0' : ''}${f}`;\r\n    } else {\r\n        const f = Math.floor(Math.random() * 30) + 1;\r\n        return `female${f < 10 ? '0' : ''}${f}`;\r\n    }\r\n    \r\n}","import { Gender } from \"./gender\";\r\n\r\nconst surnames = [\r\n    'Bai',\r\n    'Cai', 'Cao', 'Chang', 'Chen', 'Cheng', 'Cui',\r\n    'Dai', 'Deng', 'Ding', 'Dong', 'Du', 'Duan',\r\n    'Fan', 'Fang', 'Feng', 'Fu',\r\n    'Gao', 'Gong', 'Gu', 'Guo',\r\n    'Han', 'Hao', 'He', 'Hou', 'Hong', 'Hu', 'Huang',\r\n    'Jia', 'Jian', 'Jiang', 'Jin',\r\n    'Kang', 'Ke', 'Kong',\r\n    'Lai', 'Lei', 'Li', 'Liang', 'Liao', 'Lin', 'Liu', 'Long', 'Lu', 'Luo', \r\n    'Ma', 'Mao', 'Meng', 'Mo',\r\n    'Ou',\r\n    'Pan', 'Peng',\r\n    'Qian', 'Qiao', 'Qin', 'Qiu',\r\n    'Ren',\r\n    'Shao', 'Shen', 'Shi', 'Song', 'Su', 'Sun',\r\n    'Tan', 'Tang', 'Tao', 'Tian',\r\n    'Wan', 'Wang', 'Wei', 'Wen', 'Wu',\r\n    'Xia', 'Xiang', 'Xiao', 'Xie', 'Xin', 'Xiong', 'Xu', 'Xue',\r\n    'Yan', 'Yang', 'Yao', 'Ye', 'Yi', 'Yin', 'Yu', 'Yuan',\r\n    'Zeng', 'Zhang', 'Zhao', 'Zheng', 'Zhong', 'Zhou', 'Zhu', 'Zhuang', 'Zou'\r\n];\r\n\r\nconst boyFirstNames = [\r\n    'Xiu',      'Zixuan',       'Zihan',        'Yuxuan',       'Yuze',\r\n    'Xiang',    'Wei',          'Tao',          'Shi',          'Kai',\r\n    'Hao-Yu',   'Haoran',       'Guo',          'Fu',           'Dong',\r\n    'Da-Fu',    'Chih-Cheng',   'Chen',         'Chao',         'Bowen',\r\n    'Aiguo',    'Tu',           'Syaoran',      'Taio',         'Shen',\r\n    'Shan',     'Ming',         'Manchu',       'Longwei',      'Lim',\r\n    'Lee',      'Kuo',          'Kong',         'Kang',         'Jing',\r\n    'Jiao-Long','Hu',           'Hou',          'Hong',         'Fa',\r\n    'Dingbang', 'Delun',        'Chung',        'Chaun',        'Chang',\r\n    'Li Qiang', 'Li Jun',       'Bambang',      'Zhang Yong',   'Li Jie'\r\n]\r\n\r\nconst girlFirstNames = [\r\n    'Alix',     'Bethsheba',    'Hien',     'Gho',      'Diu',\r\n    'Da Xia',   'Genji',        'Hop',      'Huan',     'Jia Li',\r\n    'Jiao',     'Liling',       'Lin',      'Liu',      'Loi',\r\n    'Luan',     'Meilin',       'Meiling',  'Niu',      'Nuo',\r\n    'Qing',     'Nuwa',         'Qi',       'Na',       'Li Hua',\r\n    'Lixue',    'Nuan',         'Ming Yue', 'Mey',      'Meiying',\r\n    'Lien',     'Lian',         'Li Ming',  'Lai',      'Pangfua',\r\n    'Qinyang',  'Ting',         'Ushi',     'Yun',      'Caihong',\r\n    'Ju',       'Jilpa',        'Heng',     'Genji',    'Da Xia',\r\n    'Chu',      'Bo',           'Bai',      'Wang Fang','Li Jing'\r\n]\r\n\r\nexport const generateName = (gender : Gender) : string => {\r\n    const s = Math.floor(Math.random() * surnames.length);\r\n    const surname = surnames[s];\r\n\r\n    if (gender === Gender.Male) {\r\n        const f = Math.floor(Math.random() * boyFirstNames.length);\r\n        const fname = boyFirstNames[f];\r\n        return `${surname} ${fname}`;\r\n\r\n    } else {\r\n        const f = Math.floor(Math.random() * girlFirstNames.length);\r\n        const fname = girlFirstNames[f];\r\n        return `${surname} ${fname}`;\r\n    }\r\n    \r\n}","import { ActionType } from '@/building/building';\r\nimport { LOCATION_RESIDENCE } from '@/building/location.enum';\r\nimport { GoalType } from '@/goals/goals';\r\nimport { Skill } from '@/library/skills';\r\nimport { levelType } from '@/residence/cultivationLevels';\r\nimport { generateFace } from './data/faces';\r\nimport { Gender, generateGender } from './data/gender';\r\nimport { generateName } from './data/names';\r\n\r\n\r\nexport interface PersonStoreType {\r\n    id: number,\r\n    name: string,\r\n    gender: Gender,\r\n    face: string,\r\n    location: string,\r\n    doing: string,\r\n    \r\n    action?: {\r\n        action: ActionType,\r\n        target: string,\r\n    }\r\n\r\n    // cultivation\r\n    cultivation: {\r\n        level: number,\r\n        spiritEnergy: number,\r\n        enlightenment: number,\r\n        sense: number\r\n    }\r\n\r\n    // artefacts\r\n    craftsman: {\r\n        artefactKnowledge: number,\r\n        craftsmanLevel: number,\r\n        craftingTarget: string,\r\n        craftingSkill: number,\r\n    },\r\n\r\n    inventory: {\r\n        [detail:string] : number\r\n    },\r\n\r\n    skills: Skill[],\r\n    goal: {\r\n        type: GoalType | undefined\r\n    }\r\n}\r\n\r\nlet personId = 1;\r\n\r\nexport const newPerson = () : PersonStoreType => {\r\n    const gender = generateGender();\r\n    const name = generateName(gender);\r\n    const face = generateFace(gender);\r\n    \r\n    return {\r\n        id: personId++,\r\n        name,\r\n        gender,\r\n        face,\r\n        location: LOCATION_RESIDENCE,\r\n        doing: '',\r\n        cultivation: {\r\n            level: 0,\r\n            spiritEnergy: 0,\r\n            enlightenment: 0,\r\n            sense: 0\r\n        },\r\n        craftsman: {\r\n            artefactKnowledge: 0,\r\n            craftsmanLevel: 0,\r\n            craftingTarget: '',\r\n            craftingSkill: 0,\r\n        },\r\n        inventory: {},\r\n        skills: [],\r\n        goal: {\r\n            type: undefined\r\n        }\r\n    }\r\n}\r\n\r\nexport const printLevel = (level : number) : string => levelType(level).name;","import { createStore } from 'vuex';\r\nimport { FarmedHerbType } from './apothecary/farmService';\r\nimport { BuildingsStore, createBuildingsStore } from './building/buildingsStore';\r\nimport { PersonType } from './person/Person';\r\nimport { newPerson, PersonStoreType } from './person/PersonStoreType';\r\n\r\ninterface StoreType {\r\n\r\n    selectedPerson: number | undefined,\r\n\r\n    artefactSchool: boolean,\r\n    furnace: boolean,\r\n\r\n    residence: {\r\n        mountain: boolean,\r\n        seclusion: boolean,\r\n        trialRealm: boolean\r\n    },\r\n\r\n    apothecary: {\r\n        herbFarm: boolean,\r\n        farm: FarmedHerbType[],\r\n        apothecary: boolean\r\n    },\r\n\r\n    library: {\r\n        built: boolean\r\n    }\r\n\r\n    people: PersonStoreType[],\r\n\r\n    inventory: {\r\n        [details:string] : number\r\n    },\r\n\r\n    beastPen: {\r\n        built: boolean\r\n    },\r\n\r\n    formationPavilion: {\r\n        built: boolean\r\n    },\r\n\r\n    arena: {\r\n        built: boolean\r\n    },\r\n\r\n    buildingsStore: BuildingsStore\r\n}\r\n\r\nconst store = createStore<StoreType>({\r\n    state: {\r\n        selectedPerson: undefined,\r\n        artefactSchool: false,\r\n        furnace: false,\r\n        people: [],\r\n        inventory: {},\r\n        residence: {\r\n            mountain: false,\r\n            seclusion: false,\r\n            trialRealm: false\r\n        },\r\n        apothecary: {\r\n            herbFarm: false,\r\n            farm: [],\r\n            apothecary: false\r\n        },\r\n        library: {\r\n            built: true\r\n        },\r\n        beastPen: {\r\n            built: false\r\n        },\r\n        formationPavilion: {\r\n            built: false\r\n        },\r\n        arena: {\r\n            built: false\r\n        },\r\n        buildingsStore: createBuildingsStore()\r\n    }\r\n});\r\n\r\nconst getPerson = (personId : number) : PersonType | undefined => {\r\n    // console.log(\"get person \" + personId);\r\n    const personStore = store.state.people.find(person => person.id === personId);\r\n    // console.log(personStore);\r\n    if (personStore) return new PersonType(personStore);\r\n    else return undefined;\r\n}\r\n\r\nexport default {\r\n    store,\r\n    artefactSchool: () => store.state.artefactSchool,\r\n    furnace: () => store.state.furnace,\r\n    people: () => store.state.people.map(personStore => new PersonType(personStore)),\r\n    \r\n    buildSchool: () => {\r\n        store.state.artefactSchool = true;\r\n    },\r\n\r\n    buildFurnace: () => {\r\n        store.state.furnace = true;\r\n    },\r\n\r\n    recruit() {\r\n        const person = newPerson();\r\n        store.state.people.push(person);\r\n        this.setSelectedPerson(person.id);\r\n    },\r\n\r\n    getPerson,\r\n\r\n    inventory: () => store.state.inventory,\r\n\r\n    setSelectedPerson(id : number) {\r\n        store.state.selectedPerson = id;\r\n    },\r\n\r\n    getSelectedPersonId() {\r\n        return store.state.selectedPerson;\r\n    },\r\n\r\n    getSelectedPerson() : PersonType | undefined {\r\n        // console.log(\"Getting selected person for \" + store.state.selectedPerson);\r\n        if (store.state.selectedPerson) {\r\n            // console.log('getting person');\r\n            return getPerson(store.state.selectedPerson);\r\n            // console.log(r);\r\n            // return r;\r\n         } else {\r\n            // console.log(\"no person\");\r\n            return undefined;\r\n         }\r\n    }\r\n}","import store from '../store';\r\n\r\nexport default {\r\n    add: (item : string, amount : number) => {\r\n        console.log(`adding to inventory ${item} x ${amount}`);\r\n        const inventory = store.store.state.inventory;\r\n        if (!inventory[item]) {\r\n            inventory[item] = amount;\r\n        } else {\r\n            inventory[item] += amount;\r\n        }\r\n    },\r\n\r\n    consume: (item : string, amount : number) => {\r\n        const inventory = store.store.state.inventory;\r\n        inventory[item] -= amount;\r\n    },\r\n\r\n    list: () : string[] => Object.keys(store.store.state.inventory),\r\n\r\n    quantity: (item : string) => store.store.state.inventory[item]\r\n}","<template>\r\n    <Section>\r\n        <h2>Inventory</h2>\r\n        <Items v-for=\"(item, iIndex) in items()\" :key=\"iIndex\">\r\n            {{ item }}: {{ inventory.quantity(item) }}\r\n        </Items>\r\n    </Section>\r\n</template>\r\n\r\n<script setup>\r\nimport Section from \"@/components/SectionC.vue\";\r\nimport Items from \"@/components/ItemsC.vue\";\r\nimport inventory from './inventory';\r\n\r\nconst items = () => inventory.list()\r\n</script>","import script from \"./InventorySection.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InventorySection.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <button><slot></slot></button>\r\n</template>\r\n\r\n<style scoped>\r\nbutton {\r\n    padding: 10px;\r\n    border-radius: 0;\r\n    border: 1px solid black;\r\n    display: block;\r\n    width: 100%;\r\n}\r\n\r\nbutton:hover {\r\n    cursor: pointer;\r\n}\r\n</style>","import { render } from \"./ThickButton.vue?vue&type=template&id=d9ffa608&scoped=true\"\nconst script = {}\n\nimport \"./ThickButton.vue?vue&type=style&index=0&id=d9ffa608&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d9ffa608\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"sidePanel\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.sidePanel {\r\n    background-color: #fcfcc3;\r\n}\r\n</style>","import { render } from \"./SidePanel.vue?vue&type=template&id=99f5b094&scoped=true\"\nconst script = {}\n\nimport \"./SidePanel.vue?vue&type=style&index=0&id=99f5b094&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-99f5b094\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"next-steps\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.next-steps {\r\n    border-top: 1px solid #aaa;\r\n    margin-top: 10px;\r\n}\r\n</style>","import { render } from \"./NextSteps.vue?vue&type=template&id=fd54e5dc&scoped=true\"\nconst script = {}\n\nimport \"./NextSteps.vue?vue&type=style&index=0&id=fd54e5dc&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fd54e5dc\"]])\n\nexport default __exports__","<template>\r\n    <h2>Cultivation</h2>\r\n    <Items>Spirit Energy: {{ cultivator.qi() }}</Items>\r\n    <Items>Enlightenment: {{ cultivator.enlightenment() }}</Items>\r\n    <Items>Sense: {{ cultivator.sense() }}</Items>\r\n\r\n    <NextSteps>\r\n        <label>Next level: {{ cultivator.nextLevelType().name }}</label>\r\n        <Items>Spirit Energy: {{ cultivator.nextLevelType().spiritEnergy }}</Items>\r\n        <Items>Enlightenment: {{ cultivator.nextLevelType().enlightenment }}</Items>\r\n    </NextSteps>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\nimport Items from \"@/components/ItemsC.vue\";\r\nimport NextSteps from '@/components/NextSteps.vue';\r\nimport { PersonType } from '@/person/Person';\r\n\r\nconst props = defineProps({\r\n    person : PersonType\r\n})\r\n\r\nconst cultivator = computed(() => props.person.cultivator);\r\n\r\n</script>\r\n\r\n<style scoped>\r\nbutton {\r\n    margin-left: 10px;\r\n}\r\n\r\n.next-steps {\r\n    border-top: 1px solid #aaa;\r\n    margin-top: 10px;\r\n}\r\n</style>","import script from \"./CultivationDetails.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CultivationDetails.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CultivationDetails.vue?vue&type=style&index=0&id=3332a554&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3332a554\"]])\n\nexport default __exports__","<template>\r\n    <h2>Craftsman</h2>\r\n    <Items>Craftsman level: {{ levelType(props.person.craftsman.level()).name }}</Items>\r\n    <Items>Artefact Knowledge: {{ craftsman.artefactKnowledge() }}</Items>\r\n    <Items>Crafting Skill: {{ craftsman.craftingSkill() }}</Items>\r\n        \r\n    <!-- <template v-for=\"(artefactType, aIndex) in artefactTypes\" :key=\"aIndex\">\r\n        <button v-if=\"craftingService.canCraft(artefactType, props.person)\" @click=\"craftingService.craft(artefactType)\">\r\n            Craft {{ artefactType.name }}\r\n        </button>\r\n    </template> -->\r\n\r\n    <!-- <NextSteps v-if=\"props.person.location.eq(LOCATION)\">\r\n        <label>Next level: {{ levelType(craftsman.level() + 1).name }}</label>\r\n        <Items>Artefact Knowledge: {{ levelType(craftsman.level() + 1).artefactKnowledge }}</Items>\r\n        <Items>Crafting Skill: {{ levelType(craftsman.level() + 1).craftingSkill }}</Items>\r\n    </NextSteps> -->\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\nimport Items from \"@/components/ItemsC.vue\";\r\n// import NextSteps from '@/components/NextSteps.vue';\r\n// import { Craftsman } from './Craftsman';\r\n// import { artefactTypes } from './artefacts';\r\n// import { craftingService } from './craftingService';\r\nimport { levelType } from './craftsmanLevel';\r\n// import { school } from './artefactBuildings';\r\n\r\nconst props = defineProps({\r\n    person: Object\r\n});\r\n\r\nconst craftsman = computed(() => props.person.craftsman);\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.next-steps {\r\n    border-top: 1px solid #aaa;\r\n    margin-top: 10px;\r\n}\r\n</style>","import script from \"./CraftsmanDetails.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CraftsmanDetails.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CraftsmanDetails.vue?vue&type=style&index=0&id=3f52b468&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3f52b468\"]])\n\nexport default __exports__","<template>\r\n    <div v-if=\"building().actions && !props.person.action.hasAction()\">\r\n        <h2>Actions...</h2>\r\n        <template v-for=\"(action, aIndex) in building().actions(person)\" :key=\"aIndex\">\r\n            <select v-if=\"action.targets && action.targets(person)\" v-model=\"target\" >\r\n                <option v-for=\"(target, tIndex) in action.targets(person)\" :key=\"tIndex\">{{ target }}</option>\r\n            </select>\r\n            <!-- <button @click=\"performAction(action)\">{{ action.name }}</button> -->\r\n            <span class=\"action\" @click=\"performAction(action)\">{{ action.name }}</span>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, ref } from 'vue';\r\nimport { PersonType } from '@/person/Person';\r\n\r\nconst props = defineProps({\r\n    person: PersonType\r\n});\r\n\r\nconst target = ref('');\r\n\r\nconst building = () => props.person.location.is();\r\n\r\nconst performAction = (action) => props.person.action.set(action, target.value);\r\n\r\n</script>\r\n\r\n<style scoped>\r\nbutton {\r\n    display: block;\r\n}\r\n\r\n.action {\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: 44px;\r\n    height: 44px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    background-color: white;\r\n    font-size: 10px;\r\n    padding: 2px;\r\n}\r\n\r\n.action:hover {\r\n    cursor: pointer;\r\n    background-color: #eee;\r\n}\r\n</style>","import script from \"./BuildingActions.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BuildingActions.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BuildingActions.vue?vue&type=style&index=0&id=68849a79&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-68849a79\"]])\n\nexport default __exports__","import script from \"./PersonInventory.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonInventory.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <span class=\"banner\">\r\n        <img :src=\"faceImage()\"/>\r\n        <span class=\"right\">\r\n            <Items>Name: {{ props.person.name() }}</Items>\r\n            <Items v-if=\"action.hasAction() || props.person.location.is()?.defaultAction\">\r\n                Doing: \r\n                <strong>{{ action.doing() }}</strong>\r\n            </Items>\r\n            <Items>Level: {{ printLevel(props.person.cultivator.level()) }}</Items>\r\n        </span>\r\n    </span>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\nimport { printLevel } from '@/person/PersonStoreType';\r\nimport { PersonType } from '@/person/Person';\r\nimport Items from '@/components/ItemsC.vue';\r\n\r\nconst props = defineProps({\r\n    person: PersonType\r\n});\r\n\r\nconst action = computed(() => props.person.action);\r\n\r\nconst faceImage = () => `${process.env.BASE_URL}${props.person.face()}`;\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.banner {\r\n    display: flex;\r\n}\r\n\r\nimg {\r\n    width: 50px;\r\n    margin-right: 5px;\r\n}\r\n</style>","import script from \"./PersonBanner.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonBanner.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PersonBanner.vue?vue&type=style&index=0&id=0f39b86f&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0f39b86f\"]])\n\nexport default __exports__","<template>\r\n    <span class=\"person\">\r\n        <span class=\"details\">\r\n            <slot></slot>\r\n        </span>\r\n    </span>\r\n</template>\r\n\r\n<style scoped>\r\n    .person {\r\n        border: 1px solid #ccc;\r\n        margin: 5px;\r\n        display: block;\r\n        background-color: antiquewhite;\r\n        box-sizing: border-box;\r\n    }\r\n    \r\n    .details {\r\n        padding: 5px;\r\n        display: block;\r\n    }\r\n</style>","import { render } from \"./PersonWrapper.vue?vue&type=template&id=4fba9e18&scoped=true\"\nconst script = {}\n\nimport \"./PersonWrapper.vue?vue&type=style&index=0&id=4fba9e18&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4fba9e18\"]])\n\nexport default __exports__","<template>\r\n    <div v-if=\"!props.person.action.hasAction()\">\r\n        <h2>Go to...</h2>\r\n        <template v-for=\"(building, bIndex) in allBuildings\" :key=\"bIndex\">\r\n            <span \r\n                class=\"goto\"\r\n                @click=\"props.person.location.goTo(building.title)\"\r\n                v-if=\"!props.person.location.eq(building.title) && building.canGo(props.person) && building.built()\"\r\n                :title=\"'Go to ' + building.title\"\r\n            >\r\n                <img :src=\"image(building)\" />\r\n            </span>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\nimport { allBuildings } from '@/building/allBuildings';\r\nimport { PersonType } from '@/person/Person';\r\n\r\nconst props = defineProps({\r\n    person: PersonType\r\n});\r\n\r\nconst image = (building) => `${process.env.BASE_URL}assets/img/${building.icon}`;\r\n</script>\r\n\r\n<style scoped>\r\n.goto {\r\n    width: 40px;\r\n    height: 40px;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    margin-left: 0px;\r\n    background-color: white;\r\n}\r\n\r\n.goto img {\r\n    width: 40px;\r\n    height: 40px;\r\n}\r\n\r\n.goto:hover {\r\n    cursor: pointer;\r\n    border: 1px solid blue;\r\n    background-color: #eee;\r\n}\r\n</style>","import script from \"./PersonActions.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonActions.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PersonActions.vue?vue&type=style&index=0&id=4ada60b3&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4ada60b3\"]])\n\nexport default __exports__","import script from \"./PersonSkills.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonSkills.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { FIRE_LILY, GINSENG } from \"@/apothecary/herbs\";\r\nimport { LOCATION_OUTSIDE } from \"@/building/location.enum\";\r\nimport { MED_SPIRIT_STONE, MINERALS, SPIRIT_STONE } from \"@/inventory/items\";\r\nimport { exploreForHerbs, exploreForMinerals, exploreForSpiritStones } from \"@/outside/outsideActions\";\r\nimport { PersonType } from \"@/person/Person\";\r\nimport { GoalType } from \"./goals\";\r\n\r\nconst personHasQuantity = (person : PersonType, quantity : number) => {\r\n    const q = (person.inventory.has(SPIRIT_STONE) * 5) + (person.inventory.has(MED_SPIRIT_STONE) * 15);\r\n    return q >= quantity;\r\n}\r\n\r\nexport const getSpiritStones : GoalType = {\r\n    name: 'Get Spirit Stones',\r\n    complete: (person, quantity) => personHasQuantity(person, quantity ? quantity : 1),\r\n    action: (person) => {\r\n        person.location.goTo(LOCATION_OUTSIDE);\r\n        person.action.set(exploreForSpiritStones, '');\r\n    }\r\n}\r\n\r\nexport const getMinerals : GoalType = {\r\n    name: 'Get Minerals',\r\n    complete: (person, quantity) => person.inventory.has(MINERALS) >= (quantity ? quantity : 1),\r\n    action: (person) => {\r\n        person.location.goTo(LOCATION_OUTSIDE);\r\n        person.action.set(exploreForMinerals, '');\r\n    }\r\n}\r\n\r\nexport const getGinseng : GoalType = {\r\n    name: 'Get Ginseng',\r\n    complete: (person, quantity) => person.inventory.has(GINSENG) >= (quantity ? quantity : true),\r\n    action: (person) => {\r\n        person.location.goTo(LOCATION_OUTSIDE);\r\n        person.action.set(exploreForHerbs, '');\r\n    }\r\n}\r\n\r\nexport const getFireLily : GoalType = {\r\n    name: 'Get Fire lily',\r\n    complete: (person, quantity) => person.inventory.has(FIRE_LILY) >= (quantity ? quantity : true),\r\n    action: (person) => {\r\n        person.location.goTo(LOCATION_OUTSIDE);\r\n        person.action.set(exploreForHerbs, '');\r\n    }\r\n}","import { LOCATION_MOUNTAIN, LOCATION_RESIDENCE } from \"@/building/location.enum\";\r\nimport { gainEnlightenmentAction, mountain } from \"@/residence/buildings/mountain\";\r\nimport { cultivateAction } from \"@/residence/buildings/residence\";\r\nimport { FOUNDATION, VISION } from \"@/residence/cultivationLevels\";\r\nimport { getSpiritStones } from \"./explorationGoals\";\r\nimport { GoalType } from \"./goals\";\r\n\r\nexport const getFoundationLevel : GoalType = {\r\n    name: 'Get Foundation Level',\r\n    complete: (person) => person.cultivator.level() >= 1,\r\n    pre: () => [\r\n        { g: getSpiritStones, q: FOUNDATION.spiritEnergy }\r\n    ],\r\n    action: (person) => {\r\n        person.location.goTo(LOCATION_RESIDENCE);\r\n        person.action.set(cultivateAction, '');\r\n    }\r\n}\r\n\r\nexport const buildMountain : GoalType = {\r\n    name: 'Build mountain',\r\n    complete: () => mountain.built(),\r\n    action: () => mountain.build()\r\n}\r\n\r\nexport const cultivateQi : GoalType = {\r\n    name: 'Cultivate qi',\r\n    complete: (person, quantity) => quantity ? person.cultivator.qi() >= quantity : true,\r\n    action: (person) => {\r\n        person.location.goTo(LOCATION_RESIDENCE);\r\n        person.action.set(cultivateAction, '');\r\n    }\r\n}\r\n\r\nexport const gainEnlightenment : GoalType = {\r\n    name: 'Gain enlightenment',\r\n    complete: (person, quantity) => quantity ? person.cultivator.enlightenment() >= quantity : true,\r\n    pre: () => [\r\n        { g: buildMountain }\r\n    ],\r\n    action: (person) => {\r\n        person.location.goTo(LOCATION_MOUNTAIN);\r\n        person.action.set(gainEnlightenmentAction, '');\r\n    }\r\n}\r\n\r\nexport const getVisionLevel : GoalType = {\r\n    name: 'Get Vision Level',\r\n    complete: (person) => person.cultivator.level() >= 2,\r\n    pre: (person) => [\r\n        { g: getFoundationLevel },\r\n        { g: getSpiritStones, q: VISION.spiritEnergy - person.cultivator.qi() },\r\n        { g: cultivateQi, q: VISION.spiritEnergy },\r\n        { g: gainEnlightenment, q: VISION.enlightenment }\r\n    ],\r\n    action: () => {}\r\n}","import { LOCATION_LIBRARY } from \"@/building/location.enum\";\r\nimport { Book } from \"@/library/books\";\r\nimport { addReadBookActions } from \"@/library/library\";\r\nimport { PersonType } from \"@/person/Person\";\r\n\r\nexport const studyBook = (person : PersonType, book : Book) => {\r\n    person.location.goTo(LOCATION_LIBRARY);\r\n    const readCrafting = addReadBookActions(person).find(action => action.name.includes(book));\r\n    if (!readCrafting) throw `Cannot find ${book} book to read`;\r\n    person.action.set(readCrafting, '');\r\n}","import { addConcoctActions, apothecary } from \"@/apothecary/apothecary\";\r\nimport { Elixer } from \"@/apothecary/elixers\";\r\nimport { LOCATION_APOTHECARY } from \"@/building/location.enum\";\r\nimport { Book } from \"@/library/books\";\r\nimport { Skill } from \"@/library/skills\";\r\nimport { getFoundationLevel } from \"./cultivationGoals\";\r\nimport { getGinseng } from \"./explorationGoals\";\r\nimport { GoalType } from \"./goals\";\r\nimport { studyBook } from \"./libraryGoals\";\r\n\r\nexport const becomeApothecary : GoalType = {\r\n    name: 'Learn Apothecary',\r\n    complete: (person) => person.skills.knows(Skill.APOTHECARY_1),\r\n    action: (person) => studyBook(person, Book.APOTHECARY_1)\r\n}\r\n\r\nexport const buildApothecary : GoalType = {\r\n    name: 'Build Apothecary',\r\n    complete: () => apothecary.built(),\r\n    action: () => apothecary.build()\r\n}\r\n\r\nexport const goToApothecary : GoalType = {\r\n    name: 'Go to Apothecary',\r\n    complete: (person) => person.location.eq(LOCATION_APOTHECARY),\r\n    pre: () => [\r\n        { g: getFoundationLevel },\r\n        { g: becomeApothecary },\r\n        { g: buildApothecary }\r\n    ],\r\n    action: (person) => person.location.goTo(LOCATION_APOTHECARY)\r\n}\r\n\r\nexport const studyVitalityPill : GoalType = {\r\n    name: 'Study Vitality Pill',\r\n    complete: (person) => person.skills.knows(Skill.VITALITY_PILL),\r\n    pre: () => [\r\n        { g: becomeApothecary }\r\n    ],\r\n    action: (person) => studyBook(person, Book.VITALITY_PILL)\r\n}\r\n\r\nexport const concoctVitalityPill : GoalType = {\r\n    name: 'Concoct Vitality Pill',\r\n    complete: (person) => person.inventory.has(Elixer.VITALITY_PILL) >= 1,\r\n    pre: () => [\r\n        { g: studyVitalityPill },\r\n        { g: getGinseng, q: 1},\r\n        { g: goToApothecary }\r\n    ],\r\n    action: (person) => {\r\n        const vitalityPillAction = addConcoctActions(person).find(action => action.name.includes(Elixer.VITALITY_PILL));\r\n        if (!vitalityPillAction) throw `Couldn't find vitality pill action`;\r\n        person.action.set(vitalityPillAction, '');\r\n    }\r\n}","import { SHIELD } from \"@/artefacts/artefacts\";\r\nimport { furnace, furnaceActions } from \"@/artefacts/furnace\";\r\nimport { LOCATION_ARTEFACT_FURNACE } from \"@/building/location.enum\";\r\nimport { MINERALS, SPIRIT_STONE } from \"@/inventory/items\";\r\nimport { Book } from \"@/library/books\";\r\nimport { Skill } from \"@/library/skills\";\r\nimport { getFoundationLevel } from \"./cultivationGoals\";\r\nimport { getMinerals, getSpiritStones } from \"./explorationGoals\";\r\nimport { GoalType } from \"./goals\";\r\nimport { studyBook } from \"./libraryGoals\";\r\n\r\nexport const buildFurnace : GoalType = {\r\n    name: 'Build Furnace',\r\n    complete: () => furnace.built(),\r\n    action: () => furnace.build()\r\n}\r\n\r\nexport const learnCrafting : GoalType = {\r\n    name: 'Learn crafting',\r\n    complete: (person) => person.skills.knows(Skill.CRAFTING_1),\r\n    action: (person) => studyBook(person, Book.CRAFTING_LEVEL_1)\r\n}\r\n\r\nexport const goToFurnace : GoalType = {\r\n    name: 'Go to furnace',\r\n    complete: (person) => person.location.eq(LOCATION_ARTEFACT_FURNACE),\r\n    pre: () => [\r\n        { g: getFoundationLevel },\r\n        { g: learnCrafting },\r\n        { g: buildFurnace }\r\n    ],\r\n    action: (person) => person.location.goTo(LOCATION_ARTEFACT_FURNACE)\r\n}\r\n\r\nexport const learnCraftingShield : GoalType = {\r\n    name: 'Learn crafting shield',\r\n    complete: (person) => person.skills.knows(Skill.SHIELD),\r\n    action: (person) => studyBook(person, Book.SHIELD_BOOK)\r\n}\r\n\r\nexport const craftShield : GoalType = {\r\n    name: 'Craft shield',\r\n    complete: (person) => person.inventory.has(SHIELD.name) >= 1,\r\n    pre: () => [\r\n        { g: getFoundationLevel },\r\n        { g: learnCrafting },\r\n        { g: learnCraftingShield },\r\n        { g: getSpiritStones, q: SHIELD.materials[SPIRIT_STONE]},\r\n        { g: getMinerals, q: SHIELD.materials[MINERALS]},\r\n        { g: goToFurnace }\r\n    ],\r\n    action: (person) => {\r\n        const craftShieldAction = furnaceActions(person).find(action => action.name.includes(SHIELD.name));\r\n        if (!craftShieldAction) throw 'error finding craft shield action';\r\n        person.action.set(craftShieldAction, '');\r\n    }\r\n}","import { beastHoldingPen } from \"@/beasts/beastHoldingPen\";\r\nimport { LOCATION_BEAST_HOLDING_PEN } from \"@/building/location.enum\";\r\nimport { Book } from \"@/library/books\";\r\nimport { Skill } from \"@/library/skills\";\r\nimport { getFoundationLevel } from \"./cultivationGoals\";\r\nimport { GoalType } from \"./goals\";\r\nimport { studyBook } from \"./libraryGoals\";\r\n\r\nexport const buildBeastPavilion : GoalType = {\r\n    name: 'Build beast pavilion',\r\n    complete: () => beastHoldingPen.built(),\r\n    action: () => beastHoldingPen.build()\r\n}\r\n\r\nexport const learnBeastTaming : GoalType = {\r\n    name: 'Learn beast taming',\r\n    complete: (person) => person.skills.knows(Skill.BEAST_TAMING_1),\r\n    action: (person) => studyBook(person, Book.BEAST_TAMING_1)\r\n}\r\n\r\nexport const goToBeastPavilion : GoalType = {\r\n    name: 'Go to Beast Pavilion',\r\n    complete: (person) => person.location.eq(LOCATION_BEAST_HOLDING_PEN),\r\n    pre: () => [\r\n        { g: getFoundationLevel },\r\n        { g : learnBeastTaming },\r\n        { g : buildBeastPavilion }\r\n    ],\r\n    action: (person) => person.location.goTo(LOCATION_BEAST_HOLDING_PEN)\r\n}","import { LOCATION_ARENA } from \"@/building/location.enum\";\r\nimport { arena } from \"@/combat/arena\";\r\nimport { getFoundationLevel } from \"./cultivationGoals\";\r\nimport { GoalType } from \"./goals\";\r\n\r\nexport const buildArena : GoalType = {\r\n    name: 'Build arena',\r\n    complete: () => arena.built(),\r\n    action: () => arena.build()\r\n}\r\n\r\nexport const goToArena : GoalType = {\r\n    name: 'Go to arena',\r\n    complete: (person) => person.location.eq(LOCATION_ARENA),\r\n    pre: () => [\r\n        { g: getFoundationLevel },\r\n        { g : buildArena }\r\n    ],\r\n    action: (person) => person.location.goTo(LOCATION_ARENA)\r\n}","import { LOCATION_FOMRATION_PAVILION } from \"@/building/location.enum\";\r\nimport { formationPavilion } from \"@/formation/formationPavilion\";\r\nimport { Book } from \"@/library/books\";\r\nimport { Skill } from \"@/library/skills\";\r\nimport { getFoundationLevel } from \"./cultivationGoals\";\r\nimport { GoalType } from \"./goals\";\r\nimport { studyBook } from \"./libraryGoals\";\r\n\r\nexport const buildFormationPavilion : GoalType = {\r\n    name: 'Build formation pavilion',\r\n    complete: () => formationPavilion.built(),\r\n    action: () => formationPavilion.build()\r\n}\r\n\r\nexport const learnFormations : GoalType = {\r\n    name: 'Learn formations',\r\n    complete: (person) => person.skills.knows(Skill.FORMATIONS_1),\r\n    action: (person) => studyBook(person, Book.FORMATIONS_1)\r\n}\r\n\r\nexport const goToFormationPavilion : GoalType = {\r\n    name: 'Go to Formation Pavilion',\r\n    complete: (person) => person.location.eq(LOCATION_FOMRATION_PAVILION),\r\n    pre: () => [\r\n        { g: getFoundationLevel },\r\n        { g : learnFormations },\r\n        { g : buildFormationPavilion }\r\n    ],\r\n    action: (person) => person.location.goTo(LOCATION_FOMRATION_PAVILION)\r\n}","import farmService from \"@/apothecary/farmService\";\r\nimport { addPlantHerbActions, herbFarm } from \"@/apothecary/herbFarm\";\r\nimport { FIRE_LILY, GINSENG } from \"@/apothecary/herbs\";\r\nimport { LOCATION_HERB_FARM } from \"@/building/location.enum\";\r\nimport { Book } from \"@/library/books\";\r\nimport { Skill } from \"@/library/skills\";\r\nimport { getFoundationLevel } from \"./cultivationGoals\";\r\nimport { getFireLily, getGinseng } from \"./explorationGoals\";\r\nimport { GoalType } from \"./goals\";\r\nimport { studyBook } from \"./libraryGoals\";\r\n\r\nexport const learnHerbalism : GoalType = {\r\n    name: 'Learn Herbalism',\r\n    complete: (person) => person.skills.knows(Skill.HERBALISM_1),\r\n    action: (person) => studyBook(person, Book.HERBALISM_1)\r\n}\r\n\r\nexport const buildHerbFarm : GoalType = {\r\n    name: 'Build Herb Farm',\r\n    complete: () => herbFarm.built(),\r\n    action: () => herbFarm.build()\r\n}\r\n\r\nexport const goToHerbFarm : GoalType = {\r\n    name: 'Go to Herb Farm',\r\n    complete: (person) => person.location.eq(LOCATION_HERB_FARM),\r\n    pre: () => [\r\n        { g: getFoundationLevel },\r\n        { g : learnHerbalism },\r\n        { g : buildHerbFarm }\r\n    ],\r\n    action: (person) => person.location.goTo(LOCATION_HERB_FARM)\r\n}\r\n\r\nexport const plantFireLily : GoalType = {\r\n    name: 'Plant fire lily',\r\n    complete: (person) => farmService.getDetails().some(detail => detail.item === FIRE_LILY && detail.detail.includes(`${person.id()}`)),\r\n    pre: () => [\r\n        { g : getFireLily },\r\n        { g: goToHerbFarm }\r\n    ],\r\n    action: (person) => {\r\n        const plantFireLilyAction = addPlantHerbActions(person).find(action => action.name.includes(FIRE_LILY));\r\n        if (!plantFireLilyAction) throw 'No action to plant fire lily';\r\n        person.action.set(plantFireLilyAction, '');\r\n    }\r\n}\r\n\r\nexport const plantGinseng : GoalType = {\r\n    name: 'Plant ginseng',\r\n    complete: (person) => farmService.getDetails().some(detail => detail.item === GINSENG && detail.detail.includes(`${person.id()}`)),\r\n    pre: () => [\r\n        { g : getGinseng },\r\n        { g: goToHerbFarm }\r\n    ],\r\n    action: (person) => {\r\n        const plantGinsengAction = addPlantHerbActions(person).find(action => action.name.includes(GINSENG));\r\n        if (!plantGinsengAction) throw 'No action to plant ginseng';\r\n        person.action.set(plantGinsengAction, '');\r\n    }\r\n}","import { becomeApothecary, buildApothecary, concoctVitalityPill, goToApothecary } from \"./apothecaryGoals\";\r\nimport { buildFurnace, craftShield, goToFurnace, learnCrafting, learnCraftingShield } from \"./artefactGoals\";\r\nimport { buildBeastPavilion, goToBeastPavilion, learnBeastTaming } from \"./beastTamingGoals\";\r\nimport { buildArena, goToArena } from \"./combatGoals\";\r\nimport { getFoundationLevel, getVisionLevel } from \"./cultivationGoals\";\r\nimport { getGinseng, getMinerals, getSpiritStones } from \"./explorationGoals\";\r\nimport { buildFormationPavilion, goToFormationPavilion, learnFormations } from \"./formationGoals\";\r\nimport { GoalType } from \"./goals\";\r\nimport { buildHerbFarm, goToHerbFarm, learnHerbalism, plantFireLily, plantGinseng } from \"./herbalismGoals\";\r\n\r\nexport const allGoals = [\r\n    getFoundationLevel,\r\n    getVisionLevel,\r\n    getSpiritStones,\r\n    getMinerals,\r\n    getGinseng,\r\n    becomeApothecary,\r\n    buildApothecary,\r\n    goToApothecary,\r\n    concoctVitalityPill,\r\n    learnHerbalism,\r\n    buildHerbFarm,\r\n    goToHerbFarm,\r\n    plantFireLily,\r\n    plantGinseng,\r\n    buildFurnace,\r\n    learnCrafting,\r\n    goToFurnace,\r\n    learnCraftingShield,\r\n    craftShield,\r\n    buildFormationPavilion,\r\n    learnFormations,\r\n    goToFormationPavilion,\r\n    buildBeastPavilion,\r\n    learnBeastTaming,\r\n    goToBeastPavilion,\r\n    buildArena,\r\n    goToArena\r\n]\r\n\r\nexport const goalForName = (goalName : string) : GoalType => {\r\n    const found = allGoals.find(goal => goal.name === goalName);\r\n    if (!found) throw 'No goal found for name ' + goalName;\r\n    return found;\r\n}","<template>\r\n    <div >\r\n        <h2>Goals</h2>\r\n        <template v-if=\"!props.person.action.hasAction() && validGoals().length > 0\">\r\n            <select v-model=\"goalName\">\r\n                <option v-for=\"(goal, gindex) in validGoals()\" :key=\"gindex\">{{ goal.name }}</option>\r\n            </select>\r\n            <button v-if=\"showButton()\" @click=\"clickButton\">Assign goal</button>\r\n        </template>\r\n        <template v-else-if=\"props.person.goals.hasGoal()\">\r\n            Current goal: <strong>{{ props.person.goals.goalName() }}</strong>\r\n        </template>\r\n        <template v-else>\r\n            No goals\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineProps } from 'vue';\r\nimport { allGoals, goalForName } from '@/goals/allGoals';\r\nimport { PersonType } from '../Person';\r\n\r\nconst props = defineProps({\r\n    person : PersonType\r\n})\r\n\r\nconst goalName = ref(null);\r\n\r\nconst validGoals = () => allGoals.filter(goal => !goal.complete(props.person));\r\n\r\nconst goal = () => goalName.value ? goalForName(goalName.value) : null;\r\n\r\nconst showButton = () => goalName.value;\r\n\r\nconst clickButton = () => props.person.goals.assignGoal(goal());\r\n</script>\r\n\r\n<style scoped>\r\nselect, input, button {\r\n    display: block;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n}\r\n</style>","import script from \"./PersonGoals.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonGoals.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PersonGoals.vue?vue&type=style&index=0&id=419a5599&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-419a5599\"]])\n\nexport default __exports__","<template>\r\n    <PersonWrapper>\r\n        <PersonBanner :person=\"props.person\" />\r\n        <PersonInventory :person=\"props.person\" />\r\n        <PersonSkills :person=\"props.person\" />\r\n        <h3>At {{ props.person.location.is().title }}</h3>\r\n        <CultivationDetails :person=\"props.person\" v-if=\"isAtResidence()\" />\r\n        <CraftsmanDetails :person=\"props.person\" v-if=\"isAtArtefacts()\" />\r\n        <BuildingActions :person=\"props.person\" />\r\n        <PersonGoals :person=\"props.person\" />\r\n        <PersonActions :person=\"props.person\" />\r\n    </PersonWrapper>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\nimport CultivationDetails from '@/residence/CultivationDetails.vue';\r\nimport CraftsmanDetails from '@/artefacts/CraftsmanDetails.vue';\r\nimport { PersonType } from '@/person/Person';\r\nimport BuildingActions from '@/building/BuildingActions.vue';\r\nimport PersonInventory from './PersonInventory.vue';\r\nimport PersonBanner from './PersonBanner.vue';\r\nimport PersonWrapper from './PersonWrapper.vue';\r\nimport PersonActions from './PersonActions.vue';\r\nimport PersonSkills from './PersonSkills.vue';\r\nimport PersonGoals from './PersonGoals.vue';\r\nimport { LOCATION_MOUNTAIN, LOCATION_RESIDENCE, LOCATION_SECLUSION, LOCATION_ARTEFACT_SCHOOL, LOCATION_ARTEFACT_FURNACE } from '@/building/location.enum';\r\n\r\nconst props = defineProps({\r\n    person: PersonType\r\n});\r\n\r\nconst isAtResidence = () => \r\n    props.person.location.eq(LOCATION_RESIDENCE)\r\n    || props.person.location.eq(LOCATION_MOUNTAIN)\r\n    || props.person.location.eq(LOCATION_SECLUSION);\r\n\r\n\r\nconst isAtArtefacts = () =>\r\n    props.person.location.eq(LOCATION_ARTEFACT_SCHOOL)\r\n    || props.person.location.eq(LOCATION_ARTEFACT_FURNACE);\r\n</script>\r\n\r\n<style scoped>\r\nh3 {\r\n    font-size: 14px;\r\n    margin-bottom: 0px;\r\n    background-color: #ffcc7c;\r\n    padding: 2px;\r\n}\r\n</style>","import script from \"./PersonDetails.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonDetails.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PersonDetails.vue?vue&type=style&index=0&id=3b4d2570&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3b4d2570\"]])\n\nexport default __exports__","<template>\r\n    <label :class=\"props.center ? 'center' : ''\">\r\n        <img :src=\"image()\" />\r\n        {{ props.title }}\r\n    </label>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\n\r\nconst props = defineProps({\r\n    img: String,\r\n    title: String,\r\n    center: { type: Boolean, default: false }\r\n})\r\n\r\nconsole.log(\"process.env.BASE_URL: \" + process.env.BASE_URL);\r\nconst image = () => `${process.env.BASE_URL}assets/img/${props.img}`;\r\n\r\n</script>\r\n\r\n<style scoped>\r\nlabel {\r\n    font-weight: 700;\r\n    display: inline-flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    vertical-align: top;\r\n}\r\n\r\nlabel.center {\r\n    display: flex;\r\n\r\n}\r\n    \r\nimg {\r\n    width: 40px;\r\n}\r\n</style>","import script from \"./BuildingLabel.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BuildingLabel.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BuildingLabel.vue?vue&type=style&index=0&id=05bb8b78&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-05bb8b78\"]])\n\nexport default __exports__","<template>\r\n    <img :src=\"blueMeepleImg()\" v-if=\"props.person.gender() === Gender.Male\" />\r\n    <img :src=\"pinkMeepleImg()\" v-else />\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\nimport { Gender } from '@/person/data/gender';\r\nimport { PersonType } from '../Person';\r\n\r\nconst props = defineProps({\r\n    person: PersonType\r\n})\r\n\r\nconst blueMeepleImg = () => `${process.env.BASE_URL}assets/img/blue_meeple.webp`;\r\nconst pinkMeepleImg = () => `${process.env.BASE_URL}assets/img/pink_meeple.webp`;\r\n</script>\r\n\r\n<style scoped>\r\nimg {\r\n    width: 30px;\r\n}\r\n</style>","import script from \"./PersonMeeple.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonMeeple.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PersonMeeple.vue?vue&type=style&index=0&id=12d8b384&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-12d8b384\"]])\n\nexport default __exports__","import { outside } from \"@/outside/outside\";\r\nimport store from \"@/store\";\r\nimport { BuildingType } from \"./building\";\r\nimport { BuildingsStore } from \"./buildingsStore\";\r\n\r\nexport const OUTSIDE_PLOT = 100;\r\n\r\nconst mystore = () : BuildingsStore => store.store.state.buildingsStore;\r\n\r\nexport const buildingService = {\r\n\r\n    isBuildingSelected(plot : number) : boolean {\r\n        return mystore().selected === plot;\r\n    },\r\n\r\n    selectBuilding(plot : number) {\r\n        mystore().selected = plot;\r\n    },\r\n\r\n    getSelectedBuilding() : BuildingType | null {\r\n        if (mystore().selected === OUTSIDE_PLOT) {\r\n            return outside;\r\n        } else {\r\n            return mystore().plots[mystore().selected];\r\n        }\r\n    },\r\n\r\n    getPlots() {\r\n        return mystore().plots;\r\n    },\r\n\r\n    build(building : BuildingType) {\r\n        building.build();\r\n        mystore().plots[mystore().selected] = building;\r\n    }\r\n}\r\n","<template>\r\n    <div :class=\"['building', selected() ? 'selected' : '']\" @click=\"select\">\r\n        <template v-if=\"!props.building\">\r\n            <label class=\"centered\">Empty land</label>\r\n        </template>\r\n        <template v-else>\r\n            <BuildingLabel :img=\"props.building.icon\" :title=\"props.building.title\" :center=\"true\" />\r\n            <template v-if=\"props.building.details\">\r\n                <ItemsC v-for=\"(detail, dIndex) in props.building.details()\" :key=\"dIndex\">\r\n                    {{ detail.item }}: {{ detail.detail }}\r\n                </ItemsC>\r\n            </template>\r\n            <PersonMeeple v-for=\"(person, pindex) in props.building.occupants()\" :key=\"pindex\" :person=\"person\"/>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\nimport BuildingLabel from \"@/building/BuildingLabel.vue\";\r\nimport PersonMeeple from '@/person/view/PersonMeeple.vue';\r\nimport ItemsC from '@/components/ItemsC.vue';\r\nimport { buildingService } from './buildingService';\r\n\r\nconst props = defineProps({\r\n    building : {},\r\n    plotNumber: Number\r\n})\r\n\r\nconst selected = () => buildingService.isBuildingSelected(props.plotNumber);\r\nconst select = () => buildingService.selectBuilding(props.plotNumber);\r\n</script>\r\n\r\n<style scoped>\r\n.building {\r\n    border: 1px solid #ccc;\r\n    padding: 5px;\r\n    margin: 5px;\r\n    display: inline-block;\r\n    width: 200px;\r\n    min-height: 200px;\r\n    vertical-align: top;\r\n}\r\n\r\n.building.selected {\r\n    border: 4px solid black;\r\n}\r\n\r\n.building:hover {\r\n    cursor: pointer;\r\n}\r\n\r\nlabel.centered {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n}\r\n</style>","import script from \"./BuildingDiv.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BuildingDiv.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BuildingDiv.vue?vue&type=style&index=0&id=72d718f1&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-72d718f1\"]])\n\nexport default __exports__","<template>\r\n    <span v-if=\"props.person.gender() === Gender.Male\" ><img :src=\"maleImage()\" /></span>\r\n    <span v-else ><img :src=\"femaleImage()\" /></span>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\nimport { PersonType } from '../Person';\r\nimport { Gender } from '../data/gender';\r\n\r\nconst props = defineProps({\r\n    person : PersonType\r\n})\r\n\r\nconst maleImage = () => `${process.env.BASE_URL}assets/img/symbol_male.png`;\r\nconst femaleImage = () => `${process.env.BASE_URL}assets/img/symbol_female.png`;\r\n\r\n</script>\r\n\r\n<style scoped>\r\nimg {\r\n    width: 10px;\r\n}\r\n</style>","import script from \"./PersonGender.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonGender.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PersonGender.vue?vue&type=style&index=0&id=37c42dc8&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-37c42dc8\"]])\n\nexport default __exports__","<template>\r\n    <div :class=\"['banner', selected() ? 'selected' : 'clickable']\" @click=\"select\">\r\n        \r\n            <img :src=\"props.person.face()\"/>\r\n            <span class=\"right\">\r\n                <Items><PersonGender :person=\"props.person\" />{{ props.person.name() }}</Items>\r\n                <Items v-if=\"action.hasAction() || props.person.location.is()?.defaultAction\">\r\n                    <strong>{{ action.doing() }}</strong>\r\n                </Items>\r\n            </span>\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\nimport { PersonType } from '@/person/Person';\r\nimport store from '@/store';\r\nimport Items from '@/components/ItemsC.vue';\r\nimport PersonGender from './PersonGender.vue';\r\n\r\nconst props = defineProps({\r\n    person: PersonType\r\n});\r\n\r\nconst action = computed(() => props.person.action);\r\n\r\nconst selected = () => props.person.isSelected();\r\nconst select = () => store.setSelectedPerson(props.person.id());\r\n</script>\r\n\r\n<style scoped>\r\n.banner {\r\n    border: 1px solid #ccc;\r\n    margin: 5px;\r\n    display: inline-block;\r\n    background-color: antiquewhite;\r\n    box-sizing: border-box;\r\n    padding: 5px;\r\n    width: 90px;\r\n}\r\n\r\nimg {\r\n    width: 50px;\r\n    margin-right: 5px;\r\n}\r\n.selected {\r\n    border: 4px solid black;\r\n}\r\n\r\n.clickable:hover {\r\n    cursor: pointer;\r\n}\r\n</style>","import script from \"./PersonSynopsis.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonSynopsis.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PersonSynopsis.vue?vue&type=style&index=0&id=6337f314&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6337f314\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"buildingBar\">\r\n        <template v-if=\"building() && building().built()\">\r\n            <BuildingLabel :img=\"building().icon\" :title=\"building().title\" />\r\n            <PersonSynopsis v-for=\"(person, pindex) in building().occupants()\" :key=\"pindex\" :person=\"person\"/>\r\n        </template>\r\n        <template v-else>\r\n            <div class=\"chooseBuilding\">\r\n                <span v-for=\"(building, bIndex) in buildableBuildings()\" :key=\"bIndex\" class=\"canBuild\" @click=\"build(building)\">\r\n                    <label class=\"title\">Build:</label>\r\n                    <BuildingLabel :img=\"building.icon\" :title=\"building.title\" />\r\n                </span>\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport BuildingLabel from './BuildingLabel.vue';\r\nimport { buildingService } from './buildingService';\r\nimport PersonSynopsis from \"@/person/view/PersonSynopsis.vue\";\r\nimport { allBuildings } from './allBuildings';\r\n\r\nconst building = () => buildingService.getSelectedBuilding();\r\n\r\nconst buildableBuildings = () => allBuildings.filter(building => !building.built() && building.canBuild());\r\n\r\nconst build = (building) => buildingService.build(building);\r\n</script>\r\n\r\n<style scoped>\r\n.buildingBar {\r\n    border: 1px solid #ccc;\r\n    padding: 5px;\r\n    height: 150px;\r\n}\r\n\r\n.chooseBuilding {\r\n    display: flex;\r\n    height: 100%;\r\n    align-items: center;\r\n}\r\n\r\n.canBuild {\r\n    border: 1px solid #ccc;\r\n    display: inline-block;\r\n    padding: 5px;\r\n    margin: 5px;\r\n}\r\n\r\n.canBuild label.title {\r\n    display: block;\r\n    font-weight: 700;\r\n}\r\n\r\n.canBuild:hover {\r\n    cursor: pointer;\r\n    background-color: #aaa;\r\n}\r\n</style>","import script from \"./BuildingBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BuildingBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BuildingBar.vue?vue&type=style&index=0&id=273b0466&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-273b0466\"]])\n\nexport default __exports__","import script from \"./AllBuildings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AllBuildings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AllBuildings.vue?vue&type=style&index=0&id=0a4eed52&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0a4eed52\"]])\n\nexport default __exports__","import farmService from '../apothecary/farmService';\r\nimport store from '@/store';\r\n\r\nexport const nextTick = () => {\r\n    store.people().forEach(person => {\r\n        if (person.action.hasAction()) {\r\n            person.action.perform();\r\n            person.action.clear();\r\n        } else {\r\n            const building = person.location.is();\r\n            if (building?.defaultAction) building.defaultAction.action(person);\r\n        }\r\n\r\n        if (person.goals.hasGoal()) {\r\n            person.goals.processGoal();\r\n        }\r\n    });\r\n\r\n    farmService.grow();\r\n};","<template>\n    <div class=\"main\">\n        <div class=\"buildings\">\n            <AllBuildings />\n            <InventorySection />\n        </div>\n        <SidePanel>\n            <ThickButton @click=\"store.recruit()\">Recruit</ThickButton>\n            <PersonDetails :person=\"selectedPerson()\" v-if=\"selectedPerson()\" />\n            <ThickButton @click=\"nextTick\">Next Tick</ThickButton>\n        </SidePanel>\n    </div>\n</template>\n\n<script setup>\nimport InventorySection from '@/inventory/InventorySection.vue';\nimport ThickButton from './tick/ThickButton.vue';\nimport SidePanel from './components/SidePanel.vue';\nimport PersonDetails from './person/view/PersonDetails.vue';\nimport store from '@/store';\nimport AllBuildings from './building/AllBuildings.vue';\nimport { nextTick } from './tick/Tick';\n\nconst selectedPerson = () => {\n    const p = store.getSelectedPerson();\n    // console.log(p);\n    return p;\n}\n\n</script>\n\n<style>\nbody {\n    font-size: 14px;\n}\n\nh2 {\n    font-size: 14px;\n    margin: 0;\n}\n\n.person .details h2 {\n    border-top: 1px solid #aaa;\n    margin-top: 8px;\n}\n</style>\n\n<style scoped>\n.buildings > * {\n    vertical-align: top;\n}\n\n.main {\n    display: flex;\n    justify-content: space-between;\n}\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5e078cbc&lang=css\"\nimport \"./App.vue?vue&type=style&index=1&id=5e078cbc&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Code\\\\celestial-warfare\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5e078cbc\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store';\n\ncreateApp(App)\n    .use(store.store)\n    .mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcelestial_warfare\"] = self[\"webpackChunkcelestial_warfare\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2729); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementBlock","_renderSlot","_ctx","undefined","script","__exports__","render","LOCATION_RESIDENCE","LOCATION_MOUNTAIN","LOCATION_SECLUSION","LOCATION_ARTEFACT_SCHOOL","LOCATION_ARTEFACT_FURNACE","LOCATION_HERB_FARM","LOCATION_APOTHECARY","LOCATION_OUTSIDE","LOCATION_LIBRARY","LOCATION_BEAST_HOLDING_PEN","LOCATION_FOMRATION_PAVILION","LOCATION_ARENA","Skill","Book","CraftingLevel1","name","CRAFTING_LEVEL_1","prerequisites","skill","CRAFTING_1","HerbalismLevel1","HERBALISM_1","ApothecaryLevel1","APOTHECARY_1","VitalityPillBook","VITALITY_PILL","ShieldBook","SHIELD_BOOK","SHIELD","FormationsLevel1","FORMATIONS_1","BeastTamingLevel1","BEAST_TAMING_1","allBooks","studyBook","person","book","console","log","skills","learnSkill","addReadBookActions","actions","knows","every","forEach","push","describe","action","library","title","icon","built","build","canBuild","occupants","store","filter","location","eq","canGo","cultivateAction","cultivator","cultivate","residence","defaultAction","createBuildingsStore","selected","plots","NONE","artefactKnowledge","craftingSkill","FOUNDATION","VISION","DOMINANCE","TRANSCENDENCE","levelType","level","Craftsman","constructor","personStore","this","craftsman","craftsmanLevel","levelUp","increaseArtefactKnowledge","amount","nextLevel","nextCraftsmanLevel","increaseCraftingSkill","GINSENG","FIRE_LILY","Ginseng","gestationPeriod","yield","FireLily","allHerbNames","allHerbs","getHerbForName","find","herb","Elixer","VitalityPill","ingredients","allElixers","SPIRIT_STONE","MED_SPIRIT_STONE","MINERALS","spiritEnergy","enlightenment","sense","Cultivator","cultivation","qi","increaseQi","minLevel","nextLevelType","inventory","has","take","gainEnlightenment","senseElements","PersonAction","set","target","clear","perform","getTarget","hasAction","getAction","doing","is","PersonInventory","add","item","items","Object","keys","concoct","elixer","ingredient","addConcoctActions","hasRequiredSkill","hasAllIngredients","apothecary","randomAmount","from","to","diff","Math","floor","random","exploreForSpiritStones","exploreForMinerals","exploreForHerbs","r","outside","gainEnlightenmentAction","mountain","senseElementsAction","seclusionChambers","trialRealm","plant","gestation","grow","plants","index","getDetails","details","detail","id","addPlantHerbActions","farmService","herbFarm","materials","createNew","type","ELEMENTAL_STONE","artefactTypes","craftingService","craft","artefactType","material","quantity","canCraftArtefact","artefact","hasMaterials","materialName","hasSkill","furnaceActions","furnace","beastHoldingPen","formationPavilion","arena","allBuildings","getBuildingAt","buildingName","found","building","PersonLocation","goTo","PersonSkills","listAll","includes","doAction","goal","pre","g","complete","q","PersonGoal","assignGoal","processGoal","hasGoal","goalName","PersonType","ps","goals","face","gender","isSelected","Gender","generateGender","Male","Female","generateFace","f","surnames","boyFirstNames","girlFirstNames","generateName","s","length","surname","fname","personId","newPerson","craftingTarget","printLevel","createStore","state","selectedPerson","artefactSchool","people","seclusion","farm","beastPen","buildingsStore","getPerson","map","buildSchool","buildFurnace","recruit","setSelectedPerson","getSelectedPersonId","getSelectedPerson","consume","list","computed","props","ref","performAction","value","faceImage","_createElementVNode","image","personHasQuantity","getSpiritStones","getMinerals","getGinseng","getFireLily","getFoundationLevel","buildMountain","cultivateQi","getVisionLevel","readCrafting","becomeApothecary","buildApothecary","goToApothecary","studyVitalityPill","concoctVitalityPill","vitalityPillAction","learnCrafting","goToFurnace","learnCraftingShield","craftShield","craftShieldAction","buildBeastPavilion","learnBeastTaming","goToBeastPavilion","buildArena","goToArena","buildFormationPavilion","learnFormations","goToFormationPavilion","learnHerbalism","buildHerbFarm","goToHerbFarm","plantFireLily","some","plantFireLilyAction","plantGinseng","plantGinsengAction","allGoals","goalForName","validGoals","showButton","clickButton","isAtResidence","isAtArtefacts","img","blueMeepleImg","pinkMeepleImg","OUTSIDE_PLOT","mystore","buildingService","isBuildingSelected","plot","selectBuilding","getSelectedBuilding","getPlots","plotNumber","select","maleImage","femaleImage","buildableBuildings","nextTick","p","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","key","splice","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}